{"version":3,"sources":["../../scripts/main.ts","../../scripts/stainedGlassWindow.ts","../../scripts/input.ts","../../scripts/output.ts","../../scripts/wand.ts","../../scripts/cuisenaireRods.ts","../../scripts/perfectRun.ts","../../scripts/playerFacing.ts","../../scripts/potionGame.ts","../../scripts/npcscriptEventHandler.ts","../../scripts/gate.ts","../../scripts/npcWalk.ts","../../scripts/resetGame.ts","../../scripts/graduation.ts","../../scripts/flythroughs.ts"],"sourcesContent":["import {\n  world,\n  system,\n  Player,\n  BlockPermutation,\n  Block,\n  Entity,\n  Scoreboard,\n  EntityInventoryComponent,\n} from \"@minecraft/server\";\nimport { windows, windowUndoHandler, windowScaleHandler, startWindowGame } from \"./stainedGlassWindow\";\nimport {\n  cuisenaire,\n  getBlockBehind,\n  resetGrid,\n  giveRods,\n  resetNPC,\n  directionCheck,\n  startCuisenaireGame,\n  moveGroundsKeeper,\n} from \"./cuisenaireRods\";\nimport { cycleNumberBlock } from \"./output\";\nimport { facing } from \"./playerFacing\";\nimport { potionMaker, displayTimer, getSlots, giveIngredients, startPotionGame } from \"./potionGame\";\nimport { giveWand } from \"./wand\";\nimport \"./npcscriptEventHandler\"; //handles the NPC script events\nimport { isCoordinateWithinRange } from \"./input\";\n\nlet overworld = world.getDimension(\"overworld\");\nlet potion: string = \"\";\nlet seconds: number = 0;\nlet potionStart = 0;\nlet potionDrank = false;\nlet meters = 0;\nlet playerCanSeeInDark = false;\n\n//coin\nworld.afterEvents.entityHitEntity.subscribe(async (event) => {\n  let hitEntity = event.hitEntity;\n  if (hitEntity.typeId === `blockbuilders:orb`) {\n    let tag = hitEntity.getTags();\n    overworld.runCommandAsync(\n      `particle blockbuilders:spell ${hitEntity.location.x} ${hitEntity.location.y} ${hitEntity.location.z}`\n    );\n    let windowNumber = parseInt(tag[1].substring(6));\n    if (windowNumber >= 0) {\n      windowScaleHandler(windowNumber);\n    }\n  }\n  if (hitEntity.typeId === `blockbuilders:coin`) {\n    let tag = hitEntity.getTags();\n    let coinNumber = parseInt(tag[0].substring(4));\n    let x_location = 0 - coinNumber;\n    if (coinNumber === 4) {\n      overworld.runCommandAsync(`dialogue change @e[tag=ratioNpc] ratioNpc9 `);\n    } else if (coinNumber === 10) {\n      overworld.runCommandAsync(`dialogue open @e[tag=fractionNpc] @p ratioNpc10`);\n    }\n    overworld.runCommandAsync(`scoreboard players add Coins Depth 1`);\n    overworld.runCommandAsync(`tp @e[type=blockbuilders:coin,tag=${tag}] ${x_location} 104 156 facing -11 104 156`);\n  }\n  if (hitEntity.typeId === `blockbuilders:cauldron`) {\n    let cauldron = hitEntity.getComponent(\"inventory\") as EntityInventoryComponent;\n    overworld.runCommand(\n      `particle minecraft:cauldron_explosion_emitter ${hitEntity.location.x} ${hitEntity.location.y} ${hitEntity.location.z}`\n    );\n    let slots = await getSlots(cauldron);\n    cauldron.container?.clearAll(); //empties the cauldron\n    ({ potion, seconds } = await potionMaker(slots)); //gets the potion and the seconds for the applyPotionEffect function.\n  }\n});\n\n//listens for the block place event.\nworld.afterEvents.playerPlaceBlock.subscribe(async (event) => {\n  let block = event.block;\n  let player = event.player;\n  let colour = block.permutation?.getState(\"color\");\n  if (colour) {\n    //is it a rod block?\n    if (block.location.y === 95) {\n      //is it placed on the grid?\n      let viewDirection = event.player.getViewDirection();\n      let { direction, oppositeDirection } = await facing(viewDirection);\n      let correctDirection = await directionCheck(block.location.x, block.location.z, direction);\n      let hasColour = await getBlockBehind(event, oppositeDirection);\n      const rodPermutations = {\n        green: { block: \"green_concrete\", value: 24, message: \"1/1\" },\n        orange: { block: \"orange_concrete\", value: 12, message: \"1/2\" },\n        purple: { block: \"purple_concrete\", value: 8, message: \"1/3\" },\n        lime: { block: \"lime_concrete\", value: 6, message: \"1/4\" },\n        yellow: { block: \"yellow_concrete\", value: 4, message: \"1/6\" },\n        red: { block: \"red_concrete\", value: 3, message: \"1/8\" },\n        light_blue: { block: \"light_blue_concrete\", value: 2, message: \"1/12\" },\n        pink: { block: \"pink_concrete\", value: 1, message: \"1/24\" },\n      };\n      if (!hasColour) {\n        player.runCommandAsync(`title ${player.name} actionbar Place the rod in front of the magical connector.`);\n\n        //gives the rod back to the player if they place it on the grass.\n        const rod = rodPermutations[colour as keyof typeof rodPermutations];\n        player.runCommandAsync(`give @p ${rod.block} 1 0 {\"minecraft:can_place_on\":{\"blocks\":[\"tallgrass\"]}}`);\n\n        event.block.setPermutation(BlockPermutation.resolve(\"tallgrass\"));\n        return;\n      }\n      if (!correctDirection) {\n        player.runCommandAsync(`title ${player.name} actionbar You're facing the wrong way.`);\n        event.block.setPermutation(BlockPermutation.resolve(\"tallgrass\"));\n        return;\n      }\n      const rod = rodPermutations[colour as keyof typeof rodPermutations];\n      if (rod) {\n        cuisenaire(block, rod.block, rod.value, rod.message, direction);\n      }\n    }\n  }\n});\n\n//left click after break\nworld.afterEvents.playerBreakBlock.subscribe(async (clickEvent) => {\n  let hand_item = clickEvent.itemStackAfterBreak?.typeId; //gets the item in the players hand\n  let block = clickEvent.block;\n  let brokenBlock = clickEvent.brokenBlockPermutation;\n  if (hand_item === \"blockbuilders:mathmogicians_wand\") {\n    if (\n      //cycles the numerators for the window game as they are the only ones that need to change.\n      windows.some(\n        (window) =>\n          block.location.x === window.numerator.x &&\n          block.location.y === window.numerator.y &&\n          block.location.z === window.numerator.z\n      )\n    ) {\n      // if it is the window numerator cycle the number.\n      cycleNumberBlock(clickEvent);\n    } else {\n      //if it is anything else replace the block.\n      block.setPermutation(brokenBlock);\n    }\n  }\n});\n\n//well\nfunction applyPotionEffect(player: any, potion: string, seconds: number) {\n  player.runCommand(\"scoreboard objectives setdisplay sidebar Depth\");\n  let tick = seconds * 20; //converts seconds to ticks\n  potionStart = system.currentTick;\n  switch (potion) {\n    case \"water_breathing\": {\n      player.addEffect(\"water_breathing\", tick);\n      break;\n    }\n    case \"night_vision\": {\n      playerCanSeeInDark = true;\n      player.addEffect(\"night_vision\", tick);\n      break;\n    }\n    case \"blindness\": {\n      player.addEffect(\"blindness\", tick);\n      break;\n    }\n    case \"poison\": {\n      player.addEffect(\"poison\", tick);\n      break;\n    }\n    case \"levitation\": {\n      player.addEffect(\"levitation\", tick);\n      break;\n    }\n  }\n  player.runCommand(\"clear @p minecraft:glass_bottle\");\n}\n\nfunction mainTick() {\n  //checks different things about the player each tick.\n  world.getAllPlayers().forEach(async (player) => {\n    if (player.isOnGround) {\n      let isOnGrass = overworld.getBlock(player.location)?.permutation?.matches(\"minecraft:short_grass\");\n      if (isOnGrass && player.location.z <= 104.99) {\n        overworld.getBlock(player.location)?.setPermutation(BlockPermutation.resolve(\"minecraft:light_block\"));\n        await moveGroundsKeeper(player.location);\n        overworld.runCommand(`dialogue open @e[tag=groundskeeper] ${player.name} groundskeeper`);\n        overworld.runCommand(`playsound mob.villager.no @p`);\n      }\n    }\n    if (player.isJumping && player.location.z <= 104.99) {\n      await moveGroundsKeeper(player.location);\n      player.runCommandAsync(`dialogue open @e[tag=groundskeeper] ${player.name} groundskeeper1`);\n      overworld.runCommand(`playsound mob.villager.no @p`);\n    }\n    if (player.isInWater) {\n      if (player.location.x < 0) {\n        player.runCommand(`scoreboard objectives setdisplay sidebar Depth`);\n        meters = 94 - Math.floor(player.location.y);\n        player.runCommand(`scoreboard players set Meters Depth ${meters}`);\n      }\n\n      if (potionDrank) {\n        //applies the potion effect once\n        applyPotionEffect(player, potion, seconds);\n        potionDrank = false;\n      }\n      if (player.getEffect(\"water_breathing\")) {\n        if (playerCanSeeInDark) {\n          overworld.runCommandAsync(`effect @p night_vision ${seconds} 1 true`);\n        }\n        displayTimer(potionStart, seconds, player, \"Breathing underwater\");\n      } else if (player.getEffect(\"night_vision\")) {\n        //if they currently can't see in the dark.\n        overworld.runCommandAsync(`title @p actionbar You can now permanently see in the dark!`);\n      } else if (player.getEffect(\"blindness\")) {\n        displayTimer(potionStart, seconds, player, \"Oh no! The ratios were wrong, you can't see anything for\");\n      } else if (player.getEffect(\"levitation\")) {\n        displayTimer(potionStart, seconds, player, \"Oh no! You're floating for\");\n      }\n      if (player.isSneaking == true) {\n        player.runCommandAsync(`dialogue open @e[tag=ratioNpc] @p ratioNpc5`);\n        surface(player);\n      }\n      if (player.isSwimming == true) {\n        player.runCommandAsync(`dialogue open @e[tag=ratioNpc] @p ratioNpc5`);\n        surface(player);\n      }\n    }\n  });\n  system.run(mainTick);\n}\nasync function surface(player: any) {\n  player.runCommandAsync(`scoreboard objectives setdisplay sidebar`);\n  player.teleport({ x: -3, y: 96, z: 144 });\n  player.runCommandAsync(`scoreboard objectives setdisplay sidebar`);\n  player.addEffect(\"instant_health\", 5);\n  player.removeEffect(\"blindness\");\n  player.removeEffect(\"night_vision\");\n  player.removeEffect(\"water_breathing\");\n  player.removeEffect(\"levitation\");\n}\n\n//listens for the potion to be fully drunk.\nworld.afterEvents.itemCompleteUse.subscribe(async (event) => {\n  let player = event.source;\n  if (event.itemStack?.typeId === \"minecraft:potion\") {\n    if (potion === \"poison\") {\n      player.runCommandAsync(\n        \"title @p actionbar §fYou mixed the potion with the §2wrong ingredients. \\n§fIt has had no effect.\\nMake sure you're using the correct ingredients.\"\n      );\n    } else {\n      potionDrank = true;\n      player.runCommandAsync(\"title @p actionbar You drank the potion! §2Jump in the well §fto see the effect.\");\n    }\n    event.source.runCommand(\"clear @p minecraft:glass_bottle\");\n  }\n});\n\n//listens for the entity health changed event so they don't drown.\nworld.afterEvents.entityHealthChanged.subscribe(async (event) => {\n  if (event.entity.typeId === \"minecraft:player\") {\n    let player: Player = event.entity as Player;\n\n    if (player.isInWater == true) {\n      if (event.newValue === 18) {\n        //this is the moment they start to take damage in the water.\n        await surface(player);\n        player.runCommandAsync(\"scoreboard objectives setdisplay sidebar\");\n        if (meters > 0) {\n          player.sendMessage(`§fYou made it to a depth of: §2${meters}m \\n§fOnly ${20 - meters}m to the bottom. `);\n        }\n      }\n    }\n  }\n});\n\nsystem.run(mainTick);\n","import { world, system } from \"@minecraft/server\";\nimport { getCube } from \"./input\";\nimport { cycleNumberBlock, setBlock } from \"./output\";\nimport { getInput } from \"./input\";\nimport { Vector3 } from \"@minecraft/server\";\nimport { giveWand } from \"./wand\";\n\nlet overworld = world.getDimension(\"overworld\");\nlet seniorMode = false;\n\nexport const windows = [\n  {\n    //window 1\n    pos1: { x: 46, y: 98, z: 192 },\n    pos2: { x: 41, y: 107, z: 192 },\n    numerator: { x: 40, y: 100, z: 197 },\n    cloneFrom: { x: 50, y: 10, z: 219 },\n    cloneTo: { x: -6, y: 36, z: 219 },\n    cloneInto: { x: -6, y: 96, z: 219 },\n    scaledLeftCorner: { x: 46, y: 98, z: 219 }, //Bottom left corner of the scaled window.\n    correctNumerator: 1,\n    numberOfBlocks: 34,\n  },\n  {\n    //window 2\n    pos1: { x: 36, y: 98, z: 192 },\n    pos2: { x: 34, y: 104, z: 192 },\n    numerator: { x: 32, y: 100, z: 197 },\n    cloneFrom: { x: 39, y: 10, z: 219 },\n    cloneTo: { x: -6, y: 36, z: 219 },\n    cloneInto: { x: -6, y: 96, z: 219 },\n    scaledLeftCorner: { x: 36, y: 98, z: 219 }, //Bottom left corner of the scaled window.\n    correctNumerator: 2,\n    numberOfBlocks: 9,\n  },\n  {\n    //window 3\n    pos1: { x: 24, y: 98, z: 192 },\n    pos2: { x: 21, y: 103, z: 192 },\n    numerator: { x: 20, y: 100, z: 197 },\n    cloneFrom: { x: 27, y: 10, z: 219 },\n    cloneTo: { x: -6, y: 36, z: 219 },\n    cloneInto: { x: -6, y: 96, z: 219 },\n    scaledLeftCorner: { x: 24, y: 98, z: 219 }, //Bottom left corner of the scaled window.\n    correctNumerator: 4,\n    numberOfBlocks: 6,\n  },\n  {\n    //window 4\n    pos1: { x: 113, y: 98, z: 193 },\n    pos2: { x: 108, y: 105, z: 193 },\n    numerator: { x: 107, y: 100, z: 197 },\n    cloneFrom: { x: 117, y: 10, z: 219 },\n    cloneTo: { x: 49, y: 71, z: 219 },\n    cloneInto: { x: 49, y: 96, z: 219 },\n    scaledLeftCorner: { x: 115, y: 98, z: 219 }, //Bottom left corner of the scaled window.\n    correctNumerator: 8,\n    numberOfBlocks: 20,\n  },\n  {\n    //window 5\n    pos1: { x: 99, y: 98, z: 193 },\n    pos2: { x: 95, y: 104, z: 193 },\n    numerator: { x: 94, y: 100, z: 197 },\n    cloneFrom: { x: 100, y: 10, z: 219 },\n    cloneTo: { x: 49, y: 71, z: 219 },\n    cloneInto: { x: 49, y: 96, z: 219 },\n    scaledLeftCorner: { x: 96, y: 98, z: 219 }, //Bottom left corner of the scaled window.\n    correctNumerator: 6,\n    numberOfBlocks: 6,\n  },\n  {\n    //window 6\n    pos1: { x: 84, y: 98, z: 193 },\n    pos2: { x: 81, y: 103, z: 193 },\n    numerator: { x: 80, y: 100, z: 197 },\n    cloneFrom: { x: 85, y: 10, z: 219 },\n    cloneTo: { x: 49, y: 71, z: 219 },\n    cloneInto: { x: 49, y: 96, z: 219 },\n    scaledLeftCorner: { x: 82, y: 98, z: 219 }, //Bottom left corner of the scaled window.\n    correctNumerator: 12,\n    numberOfBlocks: 6,\n  },\n];\n\nfunction nextOrbTag(windowIndex: number) {\n  overworld.runCommandAsync(`tag @e[tag=orb] remove window${windowIndex}`);\n  overworld.runCommandAsync(`tag @e[tag=orb] add window${windowIndex + 1}`);\n  return windowIndex + 1;\n}\nfunction moveWindowCharaters(newWindowIndex: number) {\n  overworld.runCommandAsync(\n    `tp @e[type=blockbuilders:scale] ${windows[newWindowIndex].numerator.x + 2} 98 197 facing ${\n      windows[newWindowIndex].numerator.x + 2\n    } 98 94`\n  );\n  overworld.runCommandAsync(\n    `tp @e[type=blockbuilders:orb] ${windows[newWindowIndex].numerator.x + 4} 98 197 facing ${\n      windows[newWindowIndex].numerator.x + 4\n    } 98 94`\n  );\n}\n\nfunction moveWindowEntities(newWindowIndex: number) {\n  overworld.runCommandAsync(\n    `tp @e[type=blockbuilders:scale] ${windows[newWindowIndex].numerator.x + 2} 98 197 facing ${\n      windows[newWindowIndex].numerator.x + 2\n    } 98 94`\n  );\n  overworld.runCommandAsync(\n    `tp @e[type=blockbuilders:orb] ${windows[newWindowIndex].numerator.x + 4} 98 197 facing ${\n      windows[newWindowIndex].numerator.x + 4\n    } 98 94`\n  );\n}\n\nexport async function nextWindow() {\n  let windowIndex = await getWindowIndex();\n  if (typeof windowIndex === \"number\") {\n    if (windowIndex === 2) {\n      overworld.runCommandAsync(`dialogue open @e[tag=scaleNpc] @p scaleNpc8`);\n      nextOrbTag(windowIndex);\n    } else if (windowIndex === 5) {\n      overworld.runCommandAsync(`dialogue open @e[tag=scaleNpc] @p scaleNpc10`);\n    } else if (windowIndex === 3 && seniorMode === false) {\n      seniorMode = true;\n      overworld.runCommandAsync(`tp @p 111 96 183 facing 110 102 193`);\n      moveWindowCharaters(windowIndex);\n      giveWand();\n      giveGlass();\n    } else {\n      let newWindowIndex = nextOrbTag(windowIndex);\n      moveWindowCharaters(newWindowIndex);\n      giveWand();\n      giveGlass();\n    }\n  }\n}\n\nexport async function getWindowIndex() {\n  let orb = overworld.getEntities({\n    tags: [\"orb\"],\n  });\n  let windowTag = orb[0].getTags()[1];\n  let windowNumber = parseInt(windowTag.substring(6));\n  if (windowNumber >= 0) {\n    return windowNumber;\n  }\n}\n\nexport async function redoWindowGame() {\n  let windowIndex = await getWindowIndex();\n  if (typeof windowIndex === \"number\") {\n    let player = overworld.getPlayers()[0];\n    player.runCommandAsync(`tp @p ~ ~ 190`); //moves the player in front of the window design.\n    await windowUndo(windows[windowIndex].cloneFrom, windows[windowIndex].cloneTo, windows[windowIndex].cloneInto);\n    await giveWand();\n    giveGlass();\n  }\n}\nexport async function resetWindowGame() {\n  //resets the orb.\n  overworld.runCommandAsync(`tp @e[tag=orb] 44 98 197`);\n  overworld.runCommandAsync(`tag @e[tag=orb] add window0`);\n  overworld.runCommandAsync(`tag @e[tag=orb] remove window1`);\n  overworld.runCommandAsync(`tag @e[tag=orb] remove window2`);\n  overworld.runCommandAsync(`tag @e[tag=orb] remove window3`);\n  overworld.runCommandAsync(`tag @e[tag=orb] remove window4`);\n  overworld.runCommandAsync(`tag @e[tag=orb] remove window5`);\n  overworld.runCommandAsync(\n    `setblock ${windows[0].numerator.x} ${windows[0].numerator.y} ${windows[0].numerator.z} blockbuilders:number_0`\n  );\n  for (let i = 1; i < windows.length; i++) {\n    const window = windows[i];\n    overworld.runCommandAsync(\n      `setblock ${window.numerator.x} ${window.numerator.y} ${window.numerator.z} blockbuilders:number_0`\n    );\n    let colours = [\"yellow\", \"green\", \"blue\", \"purple\", \"red\", \"lime\", \"black\", \"brown\"];\n    for (const colour in colours) {\n      overworld.runCommandAsync(\n        `fill ${window.pos1.x} ${window.pos1.y} ${window.pos1.z} ${window.pos2.x} ${window.pos2.y} ${window.pos2.z} air replace ${colours[colour]}_stained_glass`\n      );\n    }\n  }\n\n  await windowUndo(windows[0].cloneTo, windows[0].cloneFrom, windows[0].cloneInto);\n  await windowUndo(windows[3].cloneTo, windows[3].cloneFrom, windows[3].cloneInto);\n}\nexport async function startWindowTutorial() {\n  overworld.runCommandAsync(`clear @p`);\n  await giveWand();\n}\n\nexport async function startWindowGame() {\n  overworld.runCommandAsync(`clear @p`);\n  await giveWand();\n  giveGlass();\n}\n\nexport async function guildMasterCheck(windowIndex: number, enoughGlass: boolean) {\n  const window = windows[windowIndex]; //gets the correct window.\n  let numerator = getInput([{ x: window.numerator.x, y: window.numerator.y, z: window.numerator.z }]);\n  if (!enoughGlass) {\n    system.runTimeout(() => {\n      overworld.runCommand(`dialogue open @e[tag=scaleNpc] @p scaleNpc11`);\n    }, 20);\n  } else if (numerator === window.correctNumerator) {\n    system.runTimeout(() => {\n      overworld.runCommand(`dialogue open @e[tag=scaleNpc] @p scaleNpc5`);\n    }, 30);\n  } else if (numerator === 0) {\n    system.runTimeout(() => {\n      overworld.runCommand(`title @p actionbar The window has been scaled by 0.`);\n    }, 20);\n  } else if (numerator > window.correctNumerator) {\n    system.runTimeout(() => {\n      overworld.runCommand(`dialogue open @e[tag=scaleNpc] @p scaleNpc6`);\n    }, 20);\n  } else if (numerator < window.correctNumerator) {\n    system.runTimeout(() => {\n      overworld.runCommand(`dialogue open @e[tag=scaleNpc] @p scaleNpc7`);\n    }, 20);\n  }\n}\n\nexport async function windowScaleHandler(windowIndex: number) {\n  const window = windows[windowIndex]; //gets the correct window.\n  await windowUndo(window.cloneTo, window.cloneFrom, window.cloneInto);\n  let enoughGlass = await scale(\n    window.pos1,\n    window.pos2,\n    window.numerator,\n    window.scaledLeftCorner,\n    window.numberOfBlocks,\n    windowIndex\n  );\n  //has enoughGlass been returned?\n  if (enoughGlass === true || enoughGlass === false) {\n    guildMasterCheck(windowIndex, enoughGlass);\n  } else {\n    overworld.runCommand(`dialogue open @e[tag=scaleNpc] @p scaleNpc12`);\n  }\n}\n\nexport async function windowUndoHandler(location: Vector3) {\n  giveGlass();\n  switch (true) {\n    case location.x === 71 && location.y === 97 && location.z === 225: {\n      await windowUndo({ x: 67, y: 47, z: 218 }, { x: 76, y: 82, z: 218 }, { x: 67, y: 97, z: 218 });\n      break;\n    }\n    case location.x === 82 && location.y === 97 && location.z === 225: {\n      await windowUndo({ x: 75, y: 47, z: 218 }, { x: 107, y: 66, z: 218 }, { x: 75, y: 97, z: 218 });\n      break;\n    }\n  }\n}\n\nexport function giveGlass() {\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 1 yellow_stained_glass 10\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 2 green_stained_glass 10\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 3 blue_stained_glass 10\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 4 purple_stained_glass 10\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 5 red_stained_glass 10\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 6 lime_stained_glass 10\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 7 black_stained_glass 10\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 8 brown_stained_glass 10\");\n}\n\nexport async function scale(\n  cubePos1: Vector3,\n  cubePos2: Vector3,\n  inputNumber: Vector3,\n  scaledLeftCorner: Vector3,\n  numberOfBlocks: number,\n  windowIndex: number\n) {\n  //if it doesn't work make sure pos1 is the bottom left corner and pos2 is the top right corner\n  const blocks = await getCube(cubePos1, cubePos2);\n  let shape = [];\n  let scaleFactor = getInput([inputNumber]);\n  for (const block of blocks) {\n    let colour = block.permutation?.getState(`color`);\n    if (colour) {\n      if (block.block) {\n        let offset_x = block.block.x - cubePos1.x; //x axis shouldn't change\n        let offset_y = block.block.y - cubePos1.y; // cube pos will always be larger than block pos\n        let offset_z = cubePos1.z - block.block.z; // cube pos will always be smaller than block pos\n        let finalWindow_x = scaledLeftCorner.x - offset_x; //swapped x and z if you want to change axis it places.\n        let finalWindow_y = scaledLeftCorner.y + offset_y;\n        let finalWindow_z = scaledLeftCorner.z + offset_z;\n        let location = { x: finalWindow_x, y: finalWindow_y, z: finalWindow_z, colour: colour };\n        shape.push(location);\n      }\n    }\n  }\n\n  ////// special operation for the last three windows\n  const divisors: { [key: number]: number } = {\n    3: 4,\n    4: 2,\n    5: 3,\n  };\n\n  if (windowIndex in divisors) {\n    //divides scaleFactor by the divisor\n    let tempScaleFactor = scaleFactor / divisors[windowIndex as keyof typeof divisors];\n    //checks if the tempScaleFactor is a whole number\n    if (tempScaleFactor % 1 === 0) {\n      //allows the function to continue\n      scaleFactor = tempScaleFactor;\n    } else {\n      //stops the function and runs the dialogue ( see else statement line 237)\n      return;\n    }\n  }\n  let scaledShape = await scaleShape(shape, scaleFactor, \"yx\");\n  for (const block of scaledShape) {\n    setBlock({ x: block.x, y: block.y, z: block.z }, block.colour + \"_stained_glass\");\n  }\n  let enoughGlass = false;\n  if (shape.length == numberOfBlocks) {\n    enoughGlass = true;\n  }\n  return enoughGlass;\n}\n\nexport async function windowUndo(from: Vector3, to: Vector3, into: Vector3) {\n  await overworld.runCommandAsync(\n    `clone ${from.x} ${from.y} ${from.z} ${to.x} ${to.y} ${to.z} ${into.x} ${into.y} ${into.z} replace`\n  ); //clones from below.\n\n  //cleans up the left side.\n  await overworld.runCommandAsync(`fill 50 116 219 -13 120 219 air replace`);\n  await overworld.runCommandAsync(`fill 50 120 219 -13 150 219 air replace`);\n  await overworld.runCommandAsync(`fill 50 150 219 -13 172 219 air replace`); //cleans any extra above\n  await overworld.runCommandAsync(`fill 50 172 219 -13 200 219 air replace`);\n}\n\nexport async function scaleShape(shape: any, scaleFactor: any, axes: string) {\n  const scaledShape = [];\n  // Find the minimum coordinates to use as the base point of the shape\n  const basePoint = shape.reduce(\n    (min: any, block: any) => ({\n      x: Math.min(min.x, block.x),\n      y: Math.min(min.y, block.y),\n      z: Math.min(min.z, block.z),\n    }),\n    shape[0]\n  );\n\n  for (const block of shape) {\n    // Calculate the relative position of the block within the shape\n    const relativePos = {\n      x: block.x - basePoint.x,\n      y: block.y - basePoint.y,\n      z: block.z - basePoint.z,\n    };\n\n    // Scale the relative position\n    for (let i = axes.includes(\"x\") ? 0 : scaleFactor - 1; i < scaleFactor; i++) {\n      for (let j = axes.includes(\"y\") ? 0 : scaleFactor - 1; j < scaleFactor; j++) {\n        for (let k = axes.includes(\"z\") ? 0 : scaleFactor - 1; k < scaleFactor; k++) {\n          // Add the scaled relative position to the base point\n          const scaledBlock = {\n            x: basePoint.x - (axes.includes(\"x\") ? relativePos.x * scaleFactor + i : relativePos.x),\n            y: basePoint.y + (axes.includes(\"y\") ? relativePos.y * scaleFactor + j : relativePos.y),\n            z: basePoint.z + (axes.includes(\"z\") ? relativePos.z * scaleFactor + k : relativePos.z),\n            colour: block.colour,\n          };\n          scaledShape.push(scaledBlock);\n        }\n      }\n    }\n  }\n  return scaledShape;\n}\n","import { BlockPermutation, Vector3, world } from \"@minecraft/server\";\n\nlet overworld = world.getDimension(\"overworld\");\n\n//combines multiple digits into a single number\nexport function getInput(digits: Vector3[]): number {\n  let combinedString = \"\";\n  for (let digit of digits) {\n    let digitValue = getNumberValue(digit);\n    combinedString += digitValue;\n  }\n  let combinedNumber = parseInt(combinedString);\n  return combinedNumber;\n}\n\nexport async function isCoordinateWithinRange(toTest: Vector3, pos1: Vector3, pos2: Vector3): Promise<boolean> {\n  const minX = Math.min(pos1.x, pos2.x);\n  const maxX = Math.max(pos1.x, pos2.x);\n  const minY = Math.min(pos1.y, pos2.y);\n  const maxY = Math.max(pos1.y, pos2.y);\n  const minZ = Math.min(pos1.z, pos2.z);\n  const maxZ = Math.max(pos1.z, pos2.z);\n  return (\n    toTest.x >= minX && toTest.x <= maxX && toTest.y >= minY && toTest.y <= maxY && toTest.z >= minZ && toTest.z <= maxZ\n  );\n}\n//gets the block and permutation of a cuboid selection\n//if it doesn't work make sure pos1 is the bottom left corner and pos2 is the top right corner\nexport async function getCube(pos1: Vector3, pos2: Vector3) {\n  const blocks = [];\n\n  for (let x = Math.min(pos1.x, pos2.x); x <= Math.max(pos1.x, pos2.x); x++) {\n    for (let y = Math.min(pos1.y, pos2.y); y <= Math.max(pos1.y, pos2.y); y++) {\n      for (let z = Math.min(pos1.z, pos2.z); z <= Math.max(pos1.z, pos2.z); z++) {\n        const location = { x: x, y: y, z: z };\n        const blockValue = getBlockValue(location);\n        blocks.push(blockValue);\n      }\n    }\n  }\n\n  return blocks;\n}\n//converts a block to a number value\nfunction getNumberValue(location: Vector3) {\n  let { block, permutation } = getBlockValue(location);\n  for (let i = 0; i < 13; i++) {\n    //check for element_0 to element_9\n    if (permutation?.matches(\"blockbuilders:number_\" + i)) {\n      return i;\n    }\n  }\n  block?.setPermutation(BlockPermutation.resolve(\"blockbuilders:number_0\")); //if no match is found, default to element_0\n  return 0; //if no match is found, return 0\n}\n\n//gets the block and permutation of a block at a specific location\nexport function getBlockValue(location: Vector3) {\n  const block = overworld.getBlock(location); //get the block at the location\n  const permutation = block?.permutation; //get the permutation of the block\n  return { block, permutation };\n}\n\n//gets the block and permutation of a block at a specific location\nexport async function getAsyncBlockValue(location: Vector3) {\n  const block = overworld.getBlock(location); //get the block at the location\n  const permutation = block?.permutation; //get the permutation of the block\n  return { block, permutation };\n}\n","import { BlockPermutation, Vector3, world } from \"@minecraft/server\";\nimport { getBlockValue } from \"./input\";\n\nconst overworld = world.getDimension(\"overworld\");\n//outputs the total to the screen\nexport function outputTotal(total: number, location: Vector3) {\n  let blockName = \"\";\n  let totalString = (\"\" + total).split(\"\").reverse().join(\"\"); //reverses the string so it can be read from right to left\n  for (let i = 0; i < totalString.length; i++) {\n    let { block, permutation } = getBlockValue(location);\n    if (totalString[i] === \".\") {\n      blockName = \"blockbuilders:symbol_decimalpoint\";\n    } else {\n      let digit = parseInt(totalString[i]);\n      blockName = \"blockbuilders:number_\" + digit;\n    }\n    block?.setPermutation(BlockPermutation.resolve(blockName));\n    location.x -= 1;\n  }\n}\n\nexport function setBlock(location: Vector3, blockName: string) {\n  let { block } = getBlockValue(location);\n  let isCopper = block?.permutation?.matches(\"waxed_weathered_copper\");\n  if (!isCopper) {\n    //keeps the frame.\n    block?.setPermutation(BlockPermutation.resolve(blockName));\n  }\n}\n\nexport async function clearAnswer(start: Vector3, end: Vector3) {\n  overworld.runCommandAsync(`fill ${start.x} ${start.y} ${start.z} ${end.x} ${end.y} ${end.z} air replace`);\n}\nexport function cycleNumberBlock(clickEvent: any) {\n  for (let i = 0; i < 12; i++) {\n    //check for element_0 toplement_8\n    if (clickEvent.brokenBlockPermutation?.matches(\"blockbuilders:number_\" + i)) {\n      let nextNumber = i + 1;\n      let blockname = \"blockbuilders:number_\" + nextNumber;\n      clickEvent.block.setPermutation(BlockPermutation.resolve(blockname));\n    }\n    if (clickEvent.brokenBlockPermutation?.matches(\"blockbuilders:number_12\")) {\n      clickEvent.block.setPermutation(BlockPermutation.resolve(\"blockbuilders:number_0\"));\n    }\n  }\n}\n","import { world } from \"@minecraft/server\";\n\nlet overworld = world.getDimension(\"overworld\");\n\nexport async function giveWand() {\n  overworld.runCommandAsync(\n    `give @p[hasitem={item=blockbuilders:mathmogicians_wand,quantity=0}] blockbuilders:mathmogicians_wand 1 0 {\"item_lock\": { \"mode\": \"lock_in_slot\" }, \"minecraft:can_destroy\":{\"blocks\":[\"minecraft:hopper\", \"blockbuilders:number_0\",\"blockbuilders:number_1\",\"blockbuilders:number_2\",\"blockbuilders:number_3\",\"blockbuilders:number_4\",\"blockbuilders:number_5\",\"blockbuilders:number_6\",\"blockbuilders:number_7\",\"blockbuilders:number_8\",\"blockbuilders:number_9\",\"blockbuilders:number_10\",\"blockbuilders:number_11\",\"blockbuilders:number_12\"]}}`\n  );\n}\n","import {\n  BlockPermutation,\n  world,\n  system,\n  Vector3,\n  BlockInventoryComponent,\n  EntityInventoryComponent,\n  Block,\n  Player,\n} from \"@minecraft/server\";\nimport { perfectRun, validRanges, finalBlock, replaySettings, npcLocation } from \"./perfectRun\";\n\nlet overworld = world.getDimension(\"overworld\");\nlet rodsPlaced: any[] = [];\n\nlet checkPoint: string = \"tp @p 29 96 114 facing 29 96 112\";\n\n//tickingarea add -447.91 -27.00 73.83 -326.23 -27.00 78.08 mapArea true\n\nexport async function startCuisenaireTutorial() {\n  await overworld.runCommandAsync(`camera @p fade time 0.1 2 0.4`);\n  await overworld.runCommandAsync(`tp @p -386 -31 126`);\n  await overworld.runCommandAsync(`tp @e[tag=fractionNpc] -391 -31 126`);\n  await overworld.runCommandAsync(`dialogue open @e[tag=fractionNpc] @p fractionNpc7`);\n  await overworld.runCommandAsync(`replaceitem entity @p slot.weapon.offhand 0 filled_map`);\n}\n\nexport async function resetCuisenaireGame() {\n  await overworld.runCommandAsync(`tp @p 29 96 114 facing 29 96 112`);\n  await overworld.runCommandAsync(`tp @e[tag=fractionNpc] 29 96 112 facing 29 96 114`);\n  await overworld.runCommandAsync(`scoreboard objectives setdisplay sidebar Students`);\n  await overworld.runCommandAsync(`scoreboard players set Saved Students 0`);\n  await resetNPC(9);\n  await resetGrid({ x: 19, y: 95, z: 81 }); //top left corner of the area.\n}\n\nexport async function startCuisenaireGame() {\n  await giveRods();\n  await giveMap();\n  await resetCuisenaireGame();\n}\n\nexport async function giveMap() {\n  let chest = overworld.getBlock({ x: 30, y: 91, z: 107 })?.getComponent(\"inventory\") as BlockInventoryComponent;\n  let map = chest.container?.getItem(0);\n  overworld.getPlayers().forEach((player) => {\n    const getPlayerInventoryComponent = player.getComponent(\"inventory\") as EntityInventoryComponent;\n    if (map) {\n      getPlayerInventoryComponent.container?.setItem(22, map);\n    } else {\n      world.sendMessage(`Error: Map not found it needs to be placed in the chest at 30 90 107`);\n    }\n  });\n}\nexport async function moveNpc(id: number) {\n  let { x, y, z } = getRandomCoordinate();\n  overworld.runCommandAsync(`tp @e[tag=rodNpc${id}] ${x} ${y} ${z}`);\n  overworld.runCommandAsync(`scoreboard players add Saved Students 1`);\n  overworld.runCommandAsync(`dialogue change @e[tag=rodNpc${id}] rodNpc${id}Saved`);\n  overworld.runCommandAsync(`tp @e[tag=fractionNpc] ${npcLocation[id].x} ${npcLocation[id].y} ${npcLocation[id].z}`);\n  checkPoint = replaySettings[id + 1].tpStart; //sets the checkpoint to the start location of the next rod from replaySettings\n  overworld.runCommandAsync(`dialogue change @e[tag=fractionNpc] fractionNpc5`);\n}\n\nexport async function movePlayerToCheckpoint() {\n  let player = world.getPlayers()[0];\n  let locationBeforeTp = player.location;\n  await overworld.runCommandAsync(checkPoint);\n\n  //gets rid of lightblock and replaces it with grass. Light block reqired to stop dialogue triggering twice.\n  await overworld.runCommandAsync(\n    `fill ${locationBeforeTp.x - 5} 95 ${locationBeforeTp.z - 5} ${locationBeforeTp.x + 5} 95 ${\n      locationBeforeTp.z + 5\n    } short_grass replace light_block`\n  );\n\n  //moves player to checkpoint\n}\n\nfunction getRandomCoordinate(): { x: number; y: number; z: number } {\n  const minX = 19;\n  const maxX = 28;\n  const y = 96;\n  const minZ = 106;\n  const maxZ = 110;\n  const x = Math.floor(Math.random() * (maxX - minX + 1)) + minX;\n  const z = Math.floor(Math.random() * (maxZ - minZ + 1)) + minZ;\n  return { x, y, z };\n}\n\nexport async function directionCheck(x: number, z: number, direction: string) {\n  let correctDirection = false;\n  for (const range of validRanges) {\n    if (\n      (range.x !== undefined && x === range.x && isInRange(z, range.zMin!, range.zMax!)) ||\n      (range.z !== undefined && z === range.z && isInRange(x, range.xMin!, range.xMax!))\n    ) {\n      correctDirection = true;\n      break;\n    }\n  }\n  return correctDirection;\n}\n\nfunction isInRange(value: number, min: any, max: any): boolean {\n  return value >= min && value <= max;\n}\n\nexport async function cuisenaire(\n  block: any,\n  blockName: string,\n  rodLength: number,\n  successMessage: string,\n  direction: string\n) {\n  if (block.permutation?.matches(blockName)) {\n    let runPlaceRods = true;\n    overworld.runCommand(`title @p actionbar ${successMessage} placed`);\n    block.setPermutation(BlockPermutation.resolve(\"tallgrass\"));\n    for (let i = 0; i < rodLength; i++) {\n      let colour = block[direction](i)?.permutation?.getState(\"color\");\n      if (colour || block[direction](i)?.permutation?.matches(\"sandstone\")) {\n        overworld.runCommand(\"title @p actionbar That rod is too long!\");\n        overworld.runCommandAsync(`give @p ${blockName} 1 0 {\"minecraft:can_place_on\":{\"blocks\":[\"tallgrass\"]}}`);\n        runPlaceRods = false;\n        break;\n      }\n    }\n    if (runPlaceRods) {\n      let rodToPlace = {\n        location: block.location,\n        direction: direction,\n        rodLength: rodLength,\n        blockName: blockName,\n        successMessage: successMessage,\n      };\n      rodsPlaced.push(rodToPlace);\n      placeRods(block, blockName, rodLength, direction);\n\n      checkFinalBlock(block, direction, rodLength);\n    } else {\n      block?.setPermutation(BlockPermutation.resolve(\"tallgrass\"));\n    }\n  }\n}\n\nexport async function resetNPC(npcAmount: number) {\n  rodsPlaced = []; //resets the rods placed array.\n\n  for (let i = 0; i < npcAmount; i++) {\n    overworld.runCommandAsync(`dialogue change @e[tag=rodNpc${i}] rodNpc${i}Default`);\n    overworld.runCommandAsync(\n      //tps the npc back based on the location parameter in npcLocation.\n      `tp @e[tag=rodNpc${i}] ${npcLocation[i].x} ${npcLocation[i].y} ${npcLocation[i].z}`\n    );\n  }\n}\n\nasync function queueSound(index: number) {\n  system.runTimeout(() => {\n    overworld.runCommandAsync(`playsound note.xylophone @p`);\n  }, index * 10);\n}\n\nfunction placeRods(block: any, blockName: string, rodLength: number, direction: string) {\n  const validDirections = [\"east\", \"west\", \"north\", \"south\"];\n  if (validDirections.includes(direction)) {\n    for (let i = 0; i < rodLength; i++) {\n      //queues a sound for each block of the rod placed.\n      queueSound(i);\n\n      block[direction](i).setPermutation(BlockPermutation.resolve(blockName));\n    }\n  } else {\n    throw new Error(`Invalid direction: ${direction}`);\n  }\n}\n\nasync function setCameraView(player: any, index: number) {\n  switch (index) {\n    case 0: //gap1\n      player.runCommandAsync(`camera ${player.name} set minecraft:free pos 30 120 99 facing 30 90 99`);\n      break;\n    case 1: //gap2\n      player.runCommandAsync(`camera ${player.name} set minecraft:free pos 37 120 92 facing 37 90 92`);\n      break;\n    case 2: //gap3\n      player.runCommandAsync(`camera ${player.name} set minecraft:free pos 45 107 91 facing 45 90 91`);\n      break;\n    case 3: //gap4\n      player.runCommandAsync(`camera ${player.name} set minecraft:free pos 57 110 86 facing 57 90 86`);\n      break;\n    case 4: //gap5\n      player.runCommandAsync(`camera ${player.name} set minecraft:free pos 66 109 93 facing 66 90 93`);\n      break;\n    case 5: //gap6\n      player.runCommandAsync(`camera ${player.name} set minecraft:free pos 89 116 100 facing 89 90 100`);\n      break;\n    case 6: //gap7\n      player.runCommandAsync(`camera ${player.name} set minecraft:free pos 90 113 93 facing 90 90 93`);\n      break;\n    case 7: //gap8\n      player.runCommandAsync(`camera ${player.name} set minecraft:free pos 80 106 85 facing 80 90 85`);\n      break;\n    case 8: //gap9\n      player.runCommandAsync(`camera ${player.name} set minecraft:free pos 93 106 85 facing 93 90 85`);\n      break;\n  }\n}\n\nexport async function getBlockBehind(event: any, oppositeDirection: string) {\n  let hasColour = event.block[oppositeDirection](1)?.permutation?.getState(\"color\");\n  return hasColour;\n}\n\nasync function replayMessage(beginningMessage: string, fractions: any[]) {\n  if (fractions) {\n    if (fractions.length > 0) {\n      const playerPlacedFractions = fractions.filter((fraction) => fraction !== undefined && fraction.startsWith(\"1\")); // filters out the fractions\n      const perfectRunFractions = fractions.filter((fraction) => fraction !== undefined && !fraction.startsWith(\"1\")); //filters out the fractions\n\n      if (perfectRunFractions.length > 0) {\n        //if you've reached the end of the list\n        const perfectRunFractionsSum = perfectRunFractions.join(\" + \");\n        overworld.runCommandAsync(`title @p actionbar ${perfectRunFractionsSum}`);\n      } else if (playerPlacedFractions.length > 0) {\n        //else if there are fractions print them\n        const fractionsSum = playerPlacedFractions.join(\" + \");\n        overworld.runCommandAsync(`title @p actionbar ${beginningMessage} ${fractionsSum}`);\n      }\n    }\n  } else {\n    world.sendMessage(`Error: No fractions found`);\n  }\n}\n\nexport async function replay(index: number) {\n  overworld.runCommandAsync(`dialogue change @e[tag=rodNpc${index}] rodNpc${index}Default`);\n  overworld.runCommandAsync(`tp @p 31 96 116`); //moves the player out of frame.\n  //sets up the arrays.\n  let npcIndex = index;\n  let fractions: any[] = [];\n  let combinedRods: any[] = [];\n  let replayConfig = replaySettings[index]; //stores all the replay settings for the different rods.\n  //cleans the area up\n  overworld.runCommandAsync(replayConfig.clearBlock);\n  overworld.runCommandAsync(replayConfig.replenishGrass);\n\n  //filters the rods placed for this gap.\n  const direction = replayConfig.cartesianDirection;\n  const value = replayConfig.cartesionValue;\n  let rodsPlacedToReplay = rodsPlaced.filter((rod) => rod.location && rod.location[direction] === value);\n  rodsPlaced = rodsPlaced.filter((rod) => !(rod.location && rod.location[direction] === value));\n\n  //gives the player the rods they placed back before replay.\n  for (let i = 0; i < rodsPlacedToReplay.length; i++) {\n    overworld.runCommandAsync(\n      `give @p ${rodsPlacedToReplay[i].blockName} 1 0 {\"minecraft:can_place_on\":{\"blocks\":[\"tallgrass\"]}}`\n    );\n  }\n\n  //filters the perfectRun list based on the index.\n  let perfectRunToReplay = perfectRun.filter((rod) => rod.number === index); //gets the perfect rods from the number component.\n\n  //concantentates the rods placed and the perfect rods together.\n  combinedRods = rodsPlacedToReplay.concat(perfectRunToReplay);\n\n  //Runs the replay using the combinedRods array.\n  if (combinedRods.length > 0) {\n    for (let i = 0; i < combinedRods.length; i++) {\n      ((index) => {\n        system.runTimeout(async () => {\n          let x = combinedRods[index].location.x;\n          world.getAllPlayers().forEach(async (player) => {\n            await setCameraView(player, npcIndex);\n            fractions.push(combinedRods[index].successMessage);\n            await replayMessage(replayConfig.beginningMessage, fractions);\n            let block = overworld.getBlock(combinedRods[index].location);\n            placeRods(\n              block,\n              combinedRods[index].blockName,\n              combinedRods[index].rodLength,\n              combinedRods[index].direction\n            );\n            if (i === combinedRods.length - 1) {\n              //resets the camera 2 seconds after last rod placed.\n              endReplay(\n                player,\n                replayConfig.tpStart,\n                replayConfig.clearBlock,\n                replayConfig.replenishGrass,\n                combinedRods\n              );\n            }\n          });\n        }, 50 * index);\n        return;\n      })(i);\n    }\n  }\n}\n\nfunction endReplay(player: any, tpStart: string, clearCommand: string, replenishGrass: string, combinedRods: any[]) {\n  system.runTimeout(() => {\n    player.runCommandAsync(tpStart);\n    player.runCommandAsync(clearCommand);\n    player.runCommandAsync(replenishGrass);\n    player.runCommandAsync(`camera ${player.name} clear`);\n    combinedRods = []; //clears the combined rods to stop looping values\n  }, 50);\n}\n\n//Resets the area to the original state, one area at a time.\nasync function squareReset(pos1: Vector3, pos2: Vector3, concreteColours: string[]) {\n  for (let i = 0; i < concreteColours.length; i++) {\n    let command = `fill ${pos1.x} ${pos1.y} ${pos1.z} ${pos2.x} ${pos2.y} ${pos2.z} tallgrass replace ${concreteColours[i]}_concrete`;\n    overworld.runCommand(command);\n  }\n  overworld.runCommandAsync(\n    `fill ${pos1.x} ${pos1.y - 1} ${pos1.z} ${pos2.x} ${pos2.y - 1} ${pos2.z} grass replace dirt`\n  );\n  overworld.runCommandAsync(`fill ${pos1.x} ${pos1.y} ${pos1.z} ${pos2.x} ${pos2.y} ${pos2.z} tallgrass replace air`);\n}\n\n//preps the grid coordinates for the squareReset function.\nexport async function resetGrid(location: Vector3) {\n  let concreteColours = [\"red\", \"green\", \"purple\", \"brown\", \"blue\", \"lime\", \"yellow\", \"orange\", \"pink\"]; // What rods will be replaced.\n  for (let i = 0; i < 4; i++) {\n    let offset_x = location.x + i * 25; // 25 is the distance between each starting point of the grid.\n    let pos1 = { x: offset_x, y: location.y, z: location.z };\n    let pos2 = { x: offset_x + 24, y: location.y, z: location.z + 24 };\n    await squareReset(pos1, pos2, concreteColours);\n  }\n}\n\nexport async function giveRods() {\n  let rods = [\n    { block: \"green_concrete\", amount: 2 },\n    { block: \"orange_concrete\", amount: 4 },\n    { block: \"purple_concrete\", amount: 3 },\n    { block: \"lime_concrete\", amount: 3 },\n    { block: \"yellow_concrete\", amount: 2 },\n    { block: \"red_concrete\", amount: 1 },\n    { block: \"pink_concrete\", amount: 1 },\n  ];\n  //overworld.runCommandAsync(`clear @p`);\n  overworld.runCommandAsync(`gamemode adventure`);\n  for (let i = 0; i < rods.length; i++) {\n    overworld.runCommandAsync(\n      `replaceitem entity @p slot.hotbar ${i} ${rods[i].block} ${rods[i].amount} 0 {\"minecraft:can_place_on\":{\"blocks\":[\"tallgrass\"]}}`\n    );\n  }\n}\n\nasync function checkFinalBlock(block: any, direction: string, rodLength: number) {\n  let rodEnd = block[direction](rodLength - 1);\n\n  let hasColour = rodEnd.permutation?.getState(\"color\");\n  let rodEndLocation = rodEnd.location;\n\n  //Does it match the expected final block and start block?\n  const isCorrectFinalBlock = finalBlock.find((block) => {\n    const rodStart = overworld.getBlock(block.startLocation);\n    return (\n      rodEnd?.permutation?.matches(block.blockName) &&\n      rodEndLocation.x === block.location.x &&\n      rodEndLocation.z === block.location.z &&\n      rodStart?.permutation?.matches(block.startBlockName)\n    );\n  });\n\n  //Is it the wrong block in the right place?\n  const isIncorrectFinalBlock = finalBlock.find(\n    (block) =>\n      !rodEnd?.permutation?.matches(block.blockName) &&\n      rodEndLocation.x === block.location.x &&\n      rodEndLocation.z === block.location.z\n  );\n\n  if (isCorrectFinalBlock) {\n    //Correct rod in the right place\n    changeNPC(isCorrectFinalBlock.number, true);\n  } else if (isIncorrectFinalBlock) {\n    changeNPC(isIncorrectFinalBlock.number, false);\n  }\n  // Checks if the rodEnd has a colour, if it does, it will change the NPC to the fail state.\n}\n\nasync function changeNPC(matchingRodIndex: number, win: boolean) {\n  //changes the NPC to the success state based on the matchingRodIndex in cuisenaire function.\n  if (win) {\n    overworld.runCommandAsync(`dialogue change @e[tag=rodNpc${matchingRodIndex}] rodNpc${matchingRodIndex}Win`);\n  } else {\n    //changes the NPC\n    overworld.runCommandAsync(`dialogue change @e[tag=rodNpc${matchingRodIndex}] rodNpc${matchingRodIndex}Fail`);\n  }\n}\n\nexport async function moveGroundsKeeper(location: Vector3) {\n  const locations = [\n    { x: 32, y: 101, z: 79 },\n    { x: 56, y: 101, z: 79 },\n    { x: 94, y: 101, z: 79 },\n  ];\n\n  let closestLocation = locations[0];\n  let minDistance = calculateDistance(location, closestLocation);\n\n  for (let i = 1; i < locations.length; i++) {\n    const distance = calculateDistance(location, locations[i]);\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestLocation = locations[i];\n    }\n  }\n\n  overworld.runCommandAsync(`tp @e[tag=groundskeeper] ${closestLocation.x} ${closestLocation.y} ${closestLocation.z}`);\n}\n\nfunction calculateDistance(a: Vector3, b: Vector3): number {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2) + Math.pow(a.z - b.z, 2));\n}\n","//defines variables for the cuisneaire rod game.\n\n//Rods that are placed in the replay.\nexport const perfectRun = [\n  //Gap 1 = 1/2 td | Optimum rod = 1/2 rod\n  {\n    number: 0,\n    location: { z: 104, y: 95, x: 30 },\n    direction: \"north\",\n    rodLength: 12,\n    blockName: \"orange_concrete\",\n    successMessage: `Instead use a 1/2 rod as that is half of 24.`,\n  },\n  //Gap 2 = 1/2 td or 12 blocks | Optimum rod = 1/2 rod\n  {\n    number: 1,\n    location: { z: 92, y: 95, x: 31 },\n    direction: \"east\",\n    rodLength: 12,\n    blockName: \"orange_concrete\",\n    successMessage: `Instead use a 1/2 rod as that is half of 24.`,\n  },\n  //Gap 3 = 1/6 td or 4 blocks | Optimum rod = 1/6 rod\n  {\n    number: 2,\n    location: { z: 91, y: 95, x: 44 },\n    direction: \"east\",\n    rodLength: 4,\n    blockName: \"yellow_concrete\",\n    successMessage: `Instead use a 1/6 rod which equals 4 blocks.`,\n  },\n  //Gap 4 = 3/4 td or 18 blocks | Optimum rod = 1/2,1/4 rod\n  {\n    number: 3,\n    location: { z: 86, y: 95, x: 48 },\n    direction: \"east\",\n    rodLength: 12,\n    blockName: \"orange_concrete\",\n    successMessage: `Instead use a 1/2 rod which = 2/4`,\n  },\n  {\n    number: 3,\n    location: { z: 86, y: 95, x: 60 },\n    direction: \"east\",\n    rodLength: 6,\n    blockName: \"lime_concrete\",\n    successMessage: `a 1/4 rod which = 3/4.`,\n  },\n  //Gap 5 = 3/8 td or 9 blocks | Optimum rod = 1/4,1/8 rod\n  {\n    number: 4,\n    location: { z: 89, y: 95, x: 66 },\n    direction: \"south\",\n    rodLength: 6,\n    blockName: \"lime_concrete\",\n    successMessage: `Instead use a 1/4 rod which = 2/8.`,\n  },\n  {\n    number: 4,\n    location: { z: 95, y: 95, x: 66 },\n    direction: \"south\",\n    rodLength: 3,\n    blockName: \"red_concrete\",\n    successMessage: `a 1/8 rod which = 3/8`,\n  },\n  //Gap 6 = 1 2/3 td or 40 blocks | Optimum rod = 1, 1/3, 1/3 rod\n  {\n    number: 5,\n    location: { z: 100, y: 95, x: 69 },\n    direction: \"east\",\n    rodLength: 24,\n    blockName: \"green_concrete\",\n    successMessage: `Instead use 1 tweed`,\n  },\n  {\n    number: 5,\n    location: { z: 100, y: 95, x: 93 },\n    direction: \"east\",\n    rodLength: 8,\n    blockName: \"purple_concrete\",\n    successMessage: `a 1/3 rod`,\n  },\n  {\n    number: 5,\n    location: { z: 100, y: 95, x: 101 },\n    direction: \"east\",\n    rodLength: 8,\n    blockName: \"purple_concrete\",\n    successMessage: `a 1/3 rod to make 1 2/3`,\n  },\n  //Gap 7 = 3/2 td or 36 blocks | Optimum rod = 1, 1/2 rod\n  {\n    number: 6,\n    location: { z: 93, y: 95, x: 108 },\n    direction: \"west\",\n    rodLength: 24,\n    blockName: \"green_concrete\",\n    successMessage: `Instead use 1 tweed`,\n  },\n  {\n    number: 6,\n    location: { z: 93, y: 95, x: 84 },\n    direction: \"west\",\n    rodLength: 12,\n    blockName: \"orange_concrete\",\n    successMessage: `a 1/2 rod to make 3/2`,\n  },\n  //Gap 8 = 7/12 td or 14 blocks | Optimum rod = 1/3,1/4 rod\n  {\n    number: 7,\n    location: { z: 85, y: 95, x: 73 },\n    direction: \"east\",\n    rodLength: 8,\n    blockName: \"purple_concrete\",\n    successMessage: `1/3`,\n  },\n  {\n    number: 7,\n    location: { z: 85, y: 95, x: 81 },\n    direction: \"east\",\n    rodLength: 6,\n    blockName: \"lime_concrete\",\n    successMessage: `1/4`,\n  },\n  //Gap 9 = 5/24 td or 5 blocks | Optimum rod = 1/6,1/24 rod\n  {\n    number: 8,\n    location: { z: 85, y: 95, x: 91 },\n    direction: \"east\",\n    rodLength: 4,\n    blockName: \"yellow_concrete\",\n    successMessage: `1/6`,\n  },\n  {\n    number: 8,\n    location: { z: 85, y: 95, x: 95 },\n    direction: \"east\",\n    rodLength: 1,\n    blockName: \"pink_concrete\",\n    successMessage: `1/24`,\n  },\n];\n\n// The gap where the rod is placed. Change x and z depending on direction.\nexport const validRanges = [\n  { x: 30, zMin: 93, zMax: 104 }, //1/2 gap 1\n  { xMin: 31, xMax: 42, z: 92 }, //1/2 gap 2\n  { xMin: 44, xMax: 47, z: 91 }, //1/6 gap 3\n  { z: 86, xMin: 48, xMax: 65 }, //3/4 gap 4\n  { zMin: 89, zMax: 97, x: 66 }, //3/8 gap 5\n  { xMin: 69, xMax: 108, z: 100 }, //1 2/3 gap 6\n  { xMin: 73, xMax: 108, z: 93 }, //3/2 gap 7\n  { xMin: 73, xMax: 86, z: 85 }, //7/12 gap 8\n  { xMin: 91, xMax: 95, z: 85 }, //5/24 gap 9\n];\n\n//The first block that is placed. If two rods are required write 2 with the same number.\nexport const finalBlock = [\n  {\n    location: { z: 93, y: 95, x: 30 },\n    blockName: \"orange_concrete\",\n    startLocation: { z: 104, y: 95, x: 30 },\n    startBlockName: \"orange_concrete\",\n    number: 0,\n  }, //1/2 gap 1\n\n  {\n    location: { z: 92, y: 95, x: 42 },\n    blockName: \"orange_concrete\",\n    startLocation: { z: 92, y: 95, x: 31 },\n    startBlockName: \"orange_concrete\",\n    number: 1,\n  }, //1/2 gap 2\n\n  {\n    location: { z: 91, y: 95, x: 47 },\n    blockName: \"yellow_concrete\",\n    startLocation: { z: 91, y: 95, x: 44 },\n    startBlockName: \"yellow_concrete\",\n    number: 2,\n  }, //1/6 gap 3\n\n  {\n    location: { z: 86, y: 95, x: 65 },\n    blockName: \"orange_concrete\",\n    startLocation: { z: 86, y: 95, x: 48 },\n    startBlockName: \"lime_concrete\",\n    number: 3,\n  }, //3/4 gap 4\n  {\n    location: { z: 86, y: 95, x: 65 },\n    blockName: \"lime_concrete\",\n    startLocation: { z: 86, y: 95, x: 48 },\n    startBlockName: \"orange_concrete\",\n    number: 3,\n  }, //3/4 gap 4\n\n  {\n    location: { z: 97, y: 95, x: 66 },\n    blockName: \"lime_concrete\",\n    startLocation: { z: 89, y: 95, x: 66 },\n    startBlockName: \"red_concrete\",\n    number: 4,\n  }, //3/8 gap 5\n  {\n    location: { z: 97, y: 95, x: 66 },\n    blockName: \"red_concrete\",\n    startLocation: { z: 89, y: 95, x: 66 },\n    startBlockName: \"lime_concrete\",\n    number: 4,\n  }, //3/8 gap 5\n\n  {\n    location: { z: 100, y: 95, x: 108 },\n    blockName: \"purple_concrete\",\n    startLocation: { z: 100, y: 95, x: 69 },\n    startBlockName: \"green_concrete\",\n    number: 5,\n  }, //1 2/3 gap 6\n  {\n    location: { z: 100, y: 95, x: 108 },\n    blockName: \"green_concrete\",\n    startLocation: { z: 100, y: 95, x: 69 },\n    startBlockName: \"purple_concrete\",\n    number: 5,\n  }, //1 2/3 gap 6\n  {\n    location: { z: 100, y: 95, x: 108 },\n    blockName: \"purple_concrete\",\n    startLocation: { z: 100, y: 95, x: 69 },\n    startBlockName: \"purple_concrete\",\n    number: 5,\n  }, //1 2/3 gap 6\n  {\n    location: { z: 93, y: 95, x: 73 },\n    blockName: \"orange_concrete\",\n    startLocation: { z: 93, y: 95, x: 108 },\n    startBlockName: \"green_concrete\",\n    number: 6,\n  }, //3/2 gap 7\n  {\n    location: { z: 93, y: 95, x: 73 },\n    blockName: \"green_concrete\",\n    startLocation: { z: 93, y: 95, x: 108 },\n    startBlockName: \"orange_concrete\",\n    number: 6,\n  }, //3/2 gap 7\n\n  {\n    location: { z: 85, y: 95, x: 86 },\n    blockName: \"purple_concrete\",\n    startLocation: { z: 85, y: 95, x: 73 },\n    startBlockName: \"lime_concrete\",\n    number: 7,\n  }, //7/12 gap 8\n  {\n    location: { z: 85, y: 95, x: 86 },\n    blockName: \"lime_concrete\",\n    startLocation: { z: 85, y: 95, x: 73 },\n    startBlockName: \"purple_concrete\",\n    number: 7,\n  }, //7/12 gap 8\n\n  {\n    location: { z: 85, y: 95, x: 95 },\n    blockName: \"pink_concrete\",\n    startLocation: { z: 85, y: 95, x: 91 },\n    startBlockName: \"yellow_concrete\",\n    number: 8,\n  }, //5/24 gap 9\n  {\n    location: { z: 85, y: 95, x: 95 },\n    blockName: \"yellow_concrete\",\n    startLocation: { z: 85, y: 95, x: 91 },\n    startBlockName: \"pink_concrete\",\n    number: 8,\n  }, //5/24 gap 9\n];\n\nexport const replaySettings = [\n  {\n    // 1/2 gap 1\n    // Message to display at the beginning of the replay\n    beginningMessage: `To make 1/2 you placed: `,\n\n    // Command to teleport the player to the starting position of the last platform they were on and set their facing direction\n    tpStart: `tp @p 31 96 107 facing 31 96 100`,\n\n    // Command to clear the rods they just placed by replacing blocks with short_grass\n    clearBlock: `fill 30 95 104 30 95 93 short_grass replace`,\n\n    // Command to replenish the grass under the rods they just placed, same coordinates as above with y axis 94.\n    replenishGrass: `fill 30 94 104 30 94 93 grass_block replace`,\n\n    //Direction along which the rods are placed ('x' or 'z'). (The one that stays the same.)\n    cartesianDirection: \"x\",\n\n    // Specific value of the x or z that is the same on all the coordinates.\n    cartesionValue: 30,\n  },\n  {\n    // 1/2 gap 2\n    beginningMessage: `To make 1/2 you placed: `,\n    tpStart: `tp @p 30 96 92 facing 38 96 92`,\n    clearBlock: `fill 31 95 92 42 95 92 short_grass replace`,\n    replenishGrass: `fill 31 94 92 42 94 92 grass_block replace`,\n    cartesianDirection: \"z\",\n    cartesionValue: 92,\n  },\n  {\n    // 1/6 gap 3\n    beginningMessage: `To make 1/6 you placed: `,\n    tpStart: `tp @p 43 96 91 facing 53 96 91`,\n    clearBlock: `fill 44 95 91 47 95 91 short_grass replace`,\n    replenishGrass: `fill 44 94 91 47 94 91 grass_block replace`,\n    cartesianDirection: \"z\",\n    cartesionValue: 91,\n  },\n  {\n    // 3/4 gap 4\n    beginningMessage: `To make 3/4 you placed: `,\n    tpStart: `tp @p 47 96 86 facing 67 96 86`,\n    clearBlock: `fill 48 95 86 65 95 86 short_grass replace`,\n    replenishGrass: `fill 48 94 86 65 94 86 grass_block replace`,\n    cartesianDirection: \"z\",\n    cartesionValue: 86,\n  },\n  {\n    // 3/8 gap 5\n    beginningMessage: `To make 3/8 you placed: `,\n    tpStart: `tp @p 66 96 87 facing 66 96 87`,\n    clearBlock: `fill 66 95 89 66 95 97 short_grass replace`,\n    replenishGrass: `fill 66 94 89 66 94 97 grass_block replace`,\n    cartesianDirection: \"x\",\n    cartesionValue: 66,\n  },\n\n  {\n    // 1 2/3 gap 6\n    beginningMessage: `To make 1 2/3 you placed: `,\n    tpStart: `tp @p 67 96 100 facing 108 96 100`,\n    clearBlock: `fill 69 95 100 108 95 100 short_grass replace`,\n    replenishGrass: `fill 69 94 100 108 94 100 grass_block replace`,\n    cartesianDirection: \"z\",\n    cartesionValue: 100,\n  },\n  {\n    // 3/2 gap 7\n    beginningMessage: `To make 3/2 you placed: `,\n    tpStart: `tp @p 110 96 93 facing 72 96 93`,\n    clearBlock: `fill 108 95 93 73 95 93 short_grass replace`,\n    replenishGrass: `fill 108 94 93 73 94 93 grass_block replace`,\n    cartesianDirection: \"z\",\n    cartesionValue: 93,\n  },\n  {\n    // 7/12 gap 8\n    beginningMessage: `To make 7/12 you placed: `,\n    tpStart: `tp @p 71 96 85 facing 86 96 85`,\n    clearBlock: `fill 73 95 85 86 95 85 short_grass replace`,\n    replenishGrass: `fill 73 94 85 86 94 85 grass_block replace`,\n    cartesianDirection: \"z\",\n    cartesionValue: 85,\n  },\n\n  // To do\n  {\n    // 5/24 gap 9\n    beginningMessage: `To make 5/24 you placed: `,\n    tpStart: `tp @p 89 96 85 facing 95 96 85`,\n    clearBlock: `fill 91 95 85 95 95 85 short_grass replace`,\n    replenishGrass: `fill 91 94 85 95 94 85 grass_block replace`,\n    cartesianDirection: \"z\",\n    cartesionValue: 85,\n  },\n];\n\n// NPC locations for the NPCs to spawn at.\nexport const npcLocation = [\n  { x: 30, y: 96, z: 90 }, // 1/2 gap 1\n  { x: 43, y: 96, z: 92 }, // 1/2 gap 2\n  { x: 49, y: 96, z: 92 }, // 1/6 gap 3\n  { x: 67, y: 96, z: 87 }, // 3/4 gap 4\n  { x: 66, y: 96, z: 100 }, // 3/8 gap 5\n  { x: 110, y: 96, z: 101 }, // 1 2/3 gap 6\n  { x: 71, y: 96, z: 93 }, // 3/2 gap 7\n  { x: 88, y: 96, z: 86 }, // 7/12 gap 8\n  { x: 98, y: 96, z: 85 }, // 5/24 gap 9f\n];\n","import { Vector3 } from \"@minecraft/server\";\n\nexport async function facing(blockLocation: Vector3) {\n  const xDiff = Math.abs(blockLocation.x);\n  const zDiff = Math.abs(blockLocation.z);\n\n  let direction;\n\n  if (xDiff > zDiff) {\n    direction = blockLocation.x > 0 ? \"east\" : \"west\";\n  } else {\n    direction = blockLocation.z > 0 ? \"south\" : \"north\";\n  }\n\n  const oppositeDirections: { [key: string]: string } = {\n    east: \"west\",\n    west: \"east\",\n    south: \"north\",\n    north: \"south\",\n  };\n  let oppositeDirection = oppositeDirections[direction];\n\n  return { direction, oppositeDirection };\n}\n","import { BlockPermutation, BlockInventoryComponent, system, world, EntityInventoryComponent } from \"@minecraft/server\";\nimport { getBlockValue } from \"./input\";\nimport { giveWand } from \"./wand\";\n\nlet overworld = world.getDimension(\"overworld\");\n\nexport async function resetPotionGame() {\n  await overworld.runCommandAsync(\"tp @e[tag=coin0] -6 90 155\");\n  await overworld.runCommandAsync(\"tp @e[tag=coin2] -5 86 154\");\n  await overworld.runCommandAsync(\"tp @e[tag=coin4] -6 82 155\");\n  await overworld.runCommandAsync(\"tp @e[tag=coin6] -5 78 154\");\n  await overworld.runCommandAsync(\"tp @e[tag=coin8] -6 75 155\");\n  await overworld.runCommandAsync(\"tp @e[tag=coin10] -5 75 154\");\n  await overworld.runCommandAsync(\"fill -7 97 139 -3 97 139 minecraft:air\");\n  await overworld.runCommandAsync(\"fill -3 126 138 -7 126 138 minecraft:black_concrete\");\n  await resetArea();\n}\nexport async function startPotionGame() {\n  await overworld.runCommandAsync(`clear @p`);\n  await overworld.runCommandAsync(\"fill -3 126 138 -7 126 138 minecraft:air\");\n  await giveWand();\n  await giveIngredients();\n}\n\nexport async function getSlots(hopper: EntityInventoryComponent) {\n  let slots = [];\n  for (let i = 0; i <= 4; i++) {\n    let item = hopper?.container?.getItem(i);\n    slots.push({\n      slotNumber: i,\n      amount: item?.amount,\n      typeId: item?.typeId,\n    });\n  }\n  return slots;\n}\n\nasync function givePotion() {\n  world.getDimension(\"overworld\").runCommandAsync(`clear @p minecraft:potion`);\n  world.getDimension(\"overworld\").runCommandAsync(`give @p minecraft:potion 1`);\n}\n\nasync function calculateRatio(ingredients: any) {\n  //remaps ingredients from Minecraft name to in game name.\n  let carrot: number = ingredients.carrot;\n  let glowDust: number = ingredients.apple;\n  let kelp: number = ingredients.potato;\n  let pufferFish: number = ingredients.beetroot;\n  let mermaidTears: number = ingredients.melon;\n  let milk: number = ingredients.milk_bucket;\n  let cocoaBeans: number = ingredients.cocoa_beans;\n  const hasIngredients = carrot + glowDust + kelp + pufferFish + mermaidTears + milk + cocoaBeans > 0;\n  const isChocolateMilk =\n    cocoaBeans * 1 === milk * 2 && carrot + glowDust + kelp + pufferFish + mermaidTears === 0 && hasIngredients;\n  const isNotChocolateMilk =\n    cocoaBeans * 1 !== milk * 2 && carrot + glowDust + kelp + pufferFish + mermaidTears === 0 && hasIngredients;\n  if (isChocolateMilk) {\n    overworld.runCommandAsync(`dialogue change @e[tag=ratioNpc] ratioNpc3`);\n    overworld.runCommandAsync(`dialogue open @e[tag=ratioNpc] @p ratioNpc6`);\n    return { potion: \"none\", seconds: 0 };\n  } else if (isNotChocolateMilk) {\n    overworld.runCommandAsync(`dialogue open @e[tag=ratioNpc] @p ratioNpc7`);\n    return { potion: \"none\", seconds: 0 };\n  } else {\n    //rest of the potions.\n    //calculates the ratio of ingredients. Testing for correct ratio and wrong ratio.\n    const isCorrectNightVisionPotion =\n      carrot * 5 === glowDust * 3 && kelp + pufferFish + mermaidTears === 0 && hasIngredients;\n    const isCorrectWaterBreathingPotion =\n      kelp * 40 === pufferFish * 24 && kelp * 40 === mermaidTears * 15 && carrot + glowDust === 0 && hasIngredients;\n    const isWrongNightVisionPotion =\n      carrot * 5 !== glowDust * 3 && kelp + pufferFish + mermaidTears === 0 && hasIngredients;\n    const isWrongWaterBreathingPotion =\n      (kelp * 40 !== pufferFish * 24 || kelp * 40 !== mermaidTears * 15) && carrot + glowDust === 0 && hasIngredients;\n\n    //maps the correct outcomes of the potion game to the correct potion and seconds.\n    if (hasIngredients) {\n      if (isCorrectNightVisionPotion) {\n        return { potion: \"night_vision\", seconds: 5 };\n      } else if (isCorrectWaterBreathingPotion) {\n        return { potion: \"water_breathing\", seconds: mermaidTears * 2 };\n      } else if (isWrongNightVisionPotion) {\n        return { potion: \"blindness\", seconds: 4 };\n      } else if (isWrongWaterBreathingPotion) {\n        return { potion: \"levitation\", seconds: 4 };\n      } else {\n        return { potion: \"empty\", seconds: 0 };\n      }\n    } else {\n      return { potion: \"none\", seconds: 0 };\n    }\n  }\n}\n\nasync function barChart(slots: any) {\n  let ingredients = {\n    apple: 0,\n    carrot: 0,\n    potato: 0,\n    beetroot: 0,\n    melon: 0,\n    milk_bucket: 0,\n    cocoa_beans: 0,\n  };\n  for (let slot of slots) {\n    switch (slot.typeId) {\n      case \"minecraft:milk_bucket\": {\n        ingredients.milk_bucket = (ingredients.milk_bucket || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:cocoa_beans\": {\n        ingredients.cocoa_beans = (ingredients.cocoa_beans || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:apple\": {\n        await setGlass(slot, \"red_stained_glass\");\n        await setItemFrame(0, slot.slotNumber);\n        ingredients.apple = (ingredients.apple || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:carrot\": {\n        await setGlass(slot, \"orange_stained_glass\");\n        await setItemFrame(1, slot.slotNumber);\n        ingredients.carrot = (ingredients.carrot || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:potato\": {\n        await setGlass(slot, \"yellow_stained_glass\");\n        await setItemFrame(2, slot.slotNumber);\n        ingredients.potato = (ingredients.potato || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:beetroot\": {\n        await setGlass(slot, \"purple_stained_glass\");\n        await setItemFrame(3, slot.slotNumber);\n        ingredients.beetroot = (ingredients.beetroot || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:melon_slice\": {\n        await setGlass(slot, \"green_stained_glass\");\n        await setItemFrame(4, slot.slotNumber);\n        ingredients.melon = (ingredients.melon || 0) + slot.amount;\n        break;\n      }\n      default: {\n        //empty\n        await setItemFrame(5, slot.slotNumber);\n        break;\n      }\n    }\n  }\n  return ingredients;\n}\nasync function setGlass(slot: any, blockName: string) {\n  let { block } = getBlockValue({ x: -7, y: 97, z: 138 });\n  block?.east(slot.slotNumber)?.setPermutation(BlockPermutation.resolve(blockName));\n  let height = 0;\n  if (slot.amount > 20) {\n    height = 20;\n  } else {\n    height = slot.amount;\n  }\n  for (let i = 0; i < height; i++) {\n    block?.above(i)?.east(slot.slotNumber)?.setPermutation(BlockPermutation.resolve(blockName));\n  }\n}\nasync function setItemFrame(offset_z: number, slotNumber: number) {\n  let cloneFrom = -7 + offset_z;\n  let cloneTo = -7 + slotNumber;\n  world\n    .getDimension(\"overworld\")\n    .runCommandAsync(`clone ${cloneFrom} 121 139 ${cloneFrom} 121 139 ${cloneTo} 97 139 replace`);\n}\n\nexport async function potionMaker(slots: any) {\n  await resetArea();\n  let ingredients = await barChart(slots);\n  let { potion, seconds } = await calculateRatio(ingredients);\n  if (potion !== \"empty\" && potion !== \"none\") {\n    await givePotion();\n  }\n  return { potion, seconds };\n}\n\nasync function resetArea() {\n  await world.getDimension(\"overworld\").runCommandAsync(\"fill -7 96 138 -3 116 138 black_stained_glass replace\");\n}\n\nexport async function giveIngredients() {\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 1 apple 20\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 2 carrot 20\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 3 beetroot 20\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 4 potato 20\");\n  overworld.runCommand(\"replaceitem entity @p slot.hotbar 5 melon_slice 20\");\n}\n\nexport function displayTimer(potionStart: number, seconds: number, player: any, potionDescription: string) {\n  let timeLeft = (potionStart + seconds * 20 - system.currentTick) / 20;\n  if (timeLeft % 1 === 0) {\n    player.onScreenDisplay.setActionBar(`Time left:\\n ${potionDescription} ${timeLeft} seconds`);\n  }\n}\n","import { system, world } from \"@minecraft/server\";\nimport {\n  moveNpc,\n  replay,\n  startCuisenaireGame,\n  resetCuisenaireGame,\n  giveMap,\n  giveRods,\n  movePlayerToCheckpoint,\n  startCuisenaireTutorial,\n} from \"./cuisenaireRods\";\nimport { perfectRun } from \"./perfectRun\";\nimport { openGate, closeGate } from \"./gate\";\nimport { npcWalk } from \"./npcWalk\";\nimport {\n  startWindowGame,\n  resetWindowGame,\n  nextWindow,\n  giveGlass,\n  startWindowTutorial,\n  redoWindowGame,\n} from \"./stainedGlassWindow\";\nimport { startPotionGame, resetPotionGame, giveIngredients } from \"./potionGame\";\nimport { resetGame } from \"./resetGame\";\nimport { giveWand } from \"./wand\";\nimport { startGraduation } from \"./graduation\";\n\nlet overworld = world.getDimension(\"overworld\");\n//handles the scriptEventReceive from NPCs\nsystem.afterEvents.scriptEventReceive.subscribe(async (event) => {\n  switch (event.id) {\n    case \"game:reset\": {\n      await resetGame();\n      break;\n    }\n    case \"rod:npcReplay\": {\n      replay(parseInt(event.message));\n      break;\n    }\n    case \"rod:npcComplete\": {\n      moveNpc(parseInt(event.message));\n      break;\n    }\n    case \"spawn:npc\": {\n      openGate(\"spawn\");\n      if (event.message === \"fraction\") {\n        overworld.runCommandAsync(`tp @e[tag=fractionNpc] 57 96 148 facing 66 97 148`);\n        overworld.runCommandAsync(`tp @e[tag=spawnNpc] 63 92 146`);\n      } else if (event.message === \"ratio\") {\n        overworld.runCommandAsync(`tp @e[tag=ratioNpc] 57 96 148 facing 66 97 148`);\n        overworld.runCommandAsync(`tp @e[tag=spawnNpc] 63 92 146`);\n      } else if (event.message === \"scale\") {\n        overworld.runCommandAsync(`tp @e[tag=scaleNpc] 57 96 148 facing 66 97 148`);\n        overworld.runCommandAsync(`tp @e[tag=spawnNpc] 63 92 146`);\n      } else {\n        world.sendMessage(`spawnNpc triggered with invalid message`);\n      }\n      break;\n    }\n    case \"gate:open\": {\n      openGate(event.message);\n      break;\n    }\n    case \"gate:close\": {\n      closeGate(event.message);\n      break;\n    }\n    case \"scale:npc\": {\n      switch (event.message) {\n        case \"0\": {\n          openGate(\"scale\");\n          closeGate(\"ratio\");\n          closeGate(\"fraction\");\n          await npcWalk(\"scale\");\n          break;\n        }\n        case \"1\": {\n          startWindowTutorial();\n          break;\n        }\n        case \"2\": {\n          giveGlass();\n          break;\n        }\n        case `3`: {\n          overworld.runCommandAsync(`dialogue change @e[tag=scaleNpc] scaleNpc3`);\n          nextWindow();\n          break;\n        }\n        case `4`: {\n          overworld.runCommandAsync(`dialogue change @e[tag=scaleNpc] scaleNpc3`);\n          redoWindowGame();\n          break;\n        }\n        case `5`: {\n          overworld.runCommandAsync(`dialogue change @e[tag=scaleNpc] scaleNpc9`);\n          overworld.runCommandAsync(`tp @p 6 96 230 facing 44 96 230`);\n          overworld.runCommandAsync(`tp @e[tag=scaleNpc] 44 96 230 facing 6 96 230`);\n          overworld.runCommandAsync(`clear @p`);\n          break;\n        }\n        case `6`: {\n          world.sendMessage(`Graduation ceremony coming soon!`);\n        }\n      }\n      break;\n    }\n    case \"ratio:npc\": {\n      switch (event.message) {\n        // guide to the game - walk at the beginning.\n        case \"0\": {\n          openGate(\"ratio\");\n          closeGate(\"scale\");\n          closeGate(\"fraction\");\n          await npcWalk(\"ratio\");\n          break;\n        }\n        // start of main game.\n        case \"1\": {\n          overworld.runCommandAsync(`dialogue change @e[tag=ratioNpc] ratioNpc3`);\n          startPotionGame();\n          break;\n        }\n        // player asks for ingredients.\n        case \"2\": {\n          await giveIngredients();\n          break;\n        }\n        // start of tutorial mode.\n        case \"3\": {\n          giveWand();\n          overworld.runCommandAsync(`dialogue change @e[tag=ratioNpc] ratioNpc2`);\n          overworld.runCommand(\"replaceitem entity @p slot.hotbar 1 cocoa_beans 2\");\n          overworld.runCommand(\"replaceitem entity @p slot.hotbar 2 milk_bucket 1\");\n        }\n      }\n      break;\n    }\n\n    case \"fraction:npc\": {\n      switch (event.message) {\n        case \"0\": {\n          openGate(\"fraction\");\n          closeGate(\"scale\");\n          closeGate(\"ratio\");\n          await npcWalk(\"fraction\");\n          break;\n        }\n        case \"1\": {\n          await startCuisenaireTutorial();\n          overworld.runCommandAsync(`dialogue change @e[tag=fractionNpc] fractionNpc3`);\n          break;\n        }\n        case \"2\": {\n          overworld.runCommandAsync(`dialogue change @e[tag=fractionNpc] fractionNpc3`);\n          await startCuisenaireGame();\n          break;\n        }\n      }\n      break;\n    }\n    case \"graduation:junior\": {\n      await startGraduation(\"junior\");\n      break;\n    }\n    case \"graduation:senior\": {\n      await startGraduation(\"senior\");\n      break;\n    }\n    case \"graduation:finale\": {\n      await overworld.runCommandAsync(`tp @e[tag=spawnNpc] 63 97 146 facing 69 97 147`);\n      await overworld.runCommandAsync(`tp @p 69 97 147 facing 41 97 147`);\n      await overworld.runCommandAsync(`dialogue open @e[tag=spawnNpc] @p spawnNpc5`);\n      await overworld.runCommandAsync(`replaceitem entity @p slot.weapon.mainhand 0 portfolio`);\n      await overworld.runCommandAsync(`give @p camera`);\n      await overworld.runCommandAsync(`dialogue change @e[tag=spawnNpc] spawnNpc6`);\n    }\n  }\n\n  if (event.id === \"fraction:groundskeeper\") {\n    await movePlayerToCheckpoint();\n  }\n});\n","import { world } from \"@minecraft/server\";\n\nlet overworld = world.getDimension(\"overworld\");\n\nexport async function openGate(location: string) {\n  switch (location) {\n    case \"spawn\": {\n      //clear\n      overworld.runCommandAsync(`setblock 62 97 148 air`);\n      overworld.runCommandAsync(`setblock 62 97 147 air`);\n      overworld.runCommandAsync(`setblock 62 98 148 air`);\n      overworld.runCommandAsync(`setblock 62 98 147 air`);\n      // right gate facing out.\n      overworld.runCommandAsync(`setblock 61 97 146 iron_bars`);\n      overworld.runCommandAsync(`setblock 60 97 146 iron_bars`);\n      overworld.runCommandAsync(`setblock 61 98 146 iron_bars`);\n      overworld.runCommandAsync(`setblock 60 98 146 iron_bars`);\n      // left gate facing out\n      overworld.runCommandAsync(`setblock 61 97 149 iron_bars`);\n      overworld.runCommandAsync(`setblock 60 97 149 iron_bars`);\n      overworld.runCommandAsync(`setblock 61 98 149 iron_bars`);\n      overworld.runCommandAsync(`setblock 60 98 149 iron_bars`);\n      break;\n    }\n    case \"scale\": {\n      //clear\n      overworld.runCommandAsync(`setblock 56 96 158 air`);\n      overworld.runCommandAsync(`setblock 57 96 158 air`);\n      overworld.runCommandAsync(`setblock 56 97 158 air`);\n      overworld.runCommandAsync(`setblock 57 97 158 air`);\n      // right gate facing out.\n      overworld.runCommandAsync(`setblock 58 96 159 iron_bars`);\n      overworld.runCommandAsync(`setblock 58 96 160 iron_bars`);\n      overworld.runCommandAsync(`setblock 58 97 159 iron_bars`);\n      overworld.runCommandAsync(`setblock 58 97 160 iron_bars`);\n      // left gate facing out\n      overworld.runCommandAsync(`setblock 55 96 159 iron_bars`);\n      overworld.runCommandAsync(`setblock 55 96 160 iron_bars`);\n      overworld.runCommandAsync(`setblock 55 97 159 iron_bars`);\n      overworld.runCommandAsync(`setblock 55 97 160 iron_bars`);\n      break;\n    }\n    case \"ratio\": {\n      //clear\n      overworld.runCommandAsync(`setblock 45 96 148 air`);\n      overworld.runCommandAsync(`setblock 45 96 147 air`);\n      overworld.runCommandAsync(`setblock 45 97 148 air`);\n      overworld.runCommandAsync(`setblock 45 97 147 air`);\n      // right gate facing out.\n      overworld.runCommandAsync(`setblock 44 96 149 iron_bars`);\n      overworld.runCommandAsync(`setblock 43 96 149 iron_bars`);\n      overworld.runCommandAsync(`setblock 44 97 149 iron_bars`);\n      overworld.runCommandAsync(`setblock 43 97 149 iron_bars`);\n      // left gate facing out\n      overworld.runCommandAsync(`setblock 44 96 146 iron_bars`);\n      overworld.runCommandAsync(`setblock 43 96 146 iron_bars`);\n      overworld.runCommandAsync(`setblock 44 97 146 iron_bars`);\n      overworld.runCommandAsync(`setblock 43 97 146 iron_bars`);\n      break;\n    }\n    case \"fraction\": {\n      //clear\n      overworld.runCommandAsync(`setblock 56 96 137 air`);\n      overworld.runCommandAsync(`setblock 57 96 137 air`);\n      overworld.runCommandAsync(`setblock 56 97 137 air`);\n      overworld.runCommandAsync(`setblock 57 97 137 air`);\n      // right gate facing out.\n      overworld.runCommandAsync(`setblock 55 96 136 iron_bars`);\n      overworld.runCommandAsync(`setblock 55 96 135 iron_bars`);\n      overworld.runCommandAsync(`setblock 55 97 136 iron_bars`);\n      overworld.runCommandAsync(`setblock 55 97 135 iron_bars`);\n      // left gate facing out\n      overworld.runCommandAsync(`setblock 58 96 136 iron_bars`);\n      overworld.runCommandAsync(`setblock 58 96 135 iron_bars`);\n      overworld.runCommandAsync(`setblock 58 97 136 iron_bars`);\n      overworld.runCommandAsync(`setblock 58 97 135 iron_bars`);\n      break;\n    }\n  }\n}\n\nexport async function closeGate(location: string) {\n  switch (location) {\n    case \"spawn\": {\n      // set gates\n      overworld.runCommandAsync(`setblock 62 97 148 iron_bars`);\n      overworld.runCommandAsync(`setblock 62 97 147 iron_bars`);\n      overworld.runCommandAsync(`setblock 62 98 148 iron_bars`);\n      overworld.runCommandAsync(`setblock 62 98 147 iron_bars`);\n      // clear right gate facing out\n      overworld.runCommandAsync(`setblock 61 97 146 air`);\n      overworld.runCommandAsync(`setblock 60 97 146 air`);\n      overworld.runCommandAsync(`setblock 61 98 146 air`);\n      overworld.runCommandAsync(`setblock 60 98 146 air`);\n      // clear left gate facing out\n      overworld.runCommandAsync(`setblock 61 97 149 air`);\n      overworld.runCommandAsync(`setblock 60 97 149 air`);\n      overworld.runCommandAsync(`setblock 61 98 149 air`);\n      overworld.runCommandAsync(`setblock 60 98 149 air`);\n      break;\n    }\n    case \"scale\": {\n      // set gates\n      overworld.runCommandAsync(`setblock 56 96 158 iron_bars`);\n      overworld.runCommandAsync(`setblock 57 96 158 iron_bars`);\n      overworld.runCommandAsync(`setblock 56 97 158 iron_bars`);\n      overworld.runCommandAsync(`setblock 57 97 158 iron_bars`);\n      // clear right gate facing out\n      overworld.runCommandAsync(`setblock 58 96 159 air`);\n      overworld.runCommandAsync(`setblock 58 96 160 air`);\n      overworld.runCommandAsync(`setblock 58 97 159 air`);\n      overworld.runCommandAsync(`setblock 58 97 160 air`);\n      // clear left gate facing out\n      overworld.runCommandAsync(`setblock 55 96 159 air`);\n      overworld.runCommandAsync(`setblock 55 96 160 air`);\n      overworld.runCommandAsync(`setblock 55 97 159 air`);\n      overworld.runCommandAsync(`setblock 55 97 160 air`);\n      break;\n    }\n    case \"ratio\": {\n      // set gates\n      overworld.runCommandAsync(`setblock 45 96 148 iron_bars`);\n      overworld.runCommandAsync(`setblock 45 96 147 iron_bars`);\n      overworld.runCommandAsync(`setblock 45 97 148 iron_bars`);\n      overworld.runCommandAsync(`setblock 45 97 147 iron_bars`);\n      // clear right gate facing out\n      overworld.runCommandAsync(`setblock 44 96 149 air`);\n      overworld.runCommandAsync(`setblock 43 96 149 air`);\n      overworld.runCommandAsync(`setblock 44 97 149 air`);\n      overworld.runCommandAsync(`setblock 43 97 149 air`);\n      // clear left gate facing out\n      overworld.runCommandAsync(`setblock 44 96 146 air`);\n      overworld.runCommandAsync(`setblock 43 96 146 air`);\n      overworld.runCommandAsync(`setblock 44 97 146 air`);\n      overworld.runCommandAsync(`setblock 43 97 146 air`);\n      break;\n    }\n    case \"fraction\": {\n      // set gates\n      overworld.runCommandAsync(`setblock 56 96 137 iron_bars`);\n      overworld.runCommandAsync(`setblock 57 96 137 iron_bars`);\n      overworld.runCommandAsync(`setblock 56 97 137 iron_bars`);\n      overworld.runCommandAsync(`setblock 57 97 137 iron_bars`);\n      // clear right gate facing out\n      overworld.runCommandAsync(`setblock 55 96 136 air`);\n      overworld.runCommandAsync(`setblock 55 96 135 air`);\n      overworld.runCommandAsync(`setblock 55 97 136 air`);\n      overworld.runCommandAsync(`setblock 55 97 135 air`);\n      // clear left gate facing out\n      overworld.runCommandAsync(`setblock 58 96 136 air`);\n      overworld.runCommandAsync(`setblock 58 96 135 air`);\n      overworld.runCommandAsync(`setblock 58 97 136 air`);\n      overworld.runCommandAsync(`setblock 58 97 135 air`);\n      break;\n    }\n  }\n}\n","import { world, system, Player } from \"@minecraft/server\";\n\nlet overworld = world.getDimension(\"overworld\");\n\nconst ratioMessage = [\n  { message: \"You should know, no one has \\nwon my well game in 50 years.\", step: 0 },\n  {\n    message: \"The trick to getting the coins is to mix §astronger potions §fto the \\n§acorrect ratios.\",\n    step: 18,\n  },\n  {\n    message: \"You'll need to make a §aNight Vision§f potion first.\\nThen a strong §aBreathing§f potion to succeed.\",\n    step: 38,\n  },\n];\n\nconst fractionMessage = [\n  { message: \"You §acan't jump or step on the grass §fin the gardens.\\nYou'll be told off if you do!\", step: 0 },\n  { message: \"I'll give you §adifferent sized magical rods§f\\nto cross the gaps to save the students.\", step: 25 },\n  {\n    message: \"Two gardens are §a24x24§f blocks wide and one is §a24x48§f.\\nEach gap will be a fraction of 24. \",\n    step: 45,\n  },\n];\n\nconst scaleMessage = [\n  { message: \"You'll need to change the §anumerator§f (the top number) \\nto scale the windows.\", step: 0 },\n  {\n    message:\n      \"To make the window larger you'll need to make the \\n§anumerator larger§f than the denominator (bottom number).\",\n    step: 25,\n  },\n  { message: \"The windows must fit in the frame!\\nSo make sure you don't make the windows too big.\", step: 50 },\n];\nexport async function npcWalk(type: string) {\n  switch (type) {\n    case \"scale\": {\n      let path = await generatePath([\n        { x: 57, y: 96, z: 148 },\n        { x: 57, y: 96, z: 182 },\n        { x: 40, y: 96, z: 182 },\n        { x: 40, y: 96, z: 186 },\n        { x: 40, y: 97, z: 188 },\n        { x: 40, y: 98, z: 189 },\n        { x: 40, y: 98, z: 191 },\n        { x: 40, y: 98, z: 195 },\n        { x: 42, y: 98, z: 195 },\n        { x: 42, y: 98, z: 197 },\n        { x: 42, y: 98, z: 196 },\n      ]);\n      moveNpc(path, \"scale\", scaleMessage);\n      break;\n    }\n    case \"fraction\": {\n      let path = await generatePath([\n        { x: 57, y: 96, z: 148 },\n        { x: 57, y: 96, z: 116 },\n        { x: 29, y: 96, z: 116 },\n        { x: 29, y: 96, z: 112 },\n        { x: 29, y: 96, z: 113 },\n      ]);\n      moveNpc(path, \"fraction\", fractionMessage);\n      break;\n    }\n    case \"ratio\": {\n      let path = await generatePath([\n        { x: 57, y: 96, z: 148 },\n        { x: -3, y: 96, z: 148 },\n        { x: -3, y: 96, z: 141 },\n        { x: -3, y: 96, z: 142 },\n      ]);\n      moveNpc(path, \"ratio\", ratioMessage);\n      break;\n    }\n  }\n}\n\nasync function moveNpc(\n  path: { x: number; y: number; z: number }[],\n  type: string,\n  messages: { message: string; step: number }[]\n) {\n  let message = \"\";\n  overworld.runCommandAsync(`dialogue change @e[tag=${type}Npc] ${type}Npc1`); // in motion dialogue\n  for (let i = 0; i < path.length - 1; i++) {\n    let { x, y, z } = path[i];\n    const nextPoint = path[i + 1];\n    const facingX = nextPoint.x;\n    const facingY = nextPoint.y;\n    const facingZ = nextPoint.z;\n    system.runTimeout(async () => {\n      await overworld.runCommandAsync(`tp @e[tag=${type}Npc] ${x} ${y} ${z} facing ${facingX} ${facingY} ${facingZ}`);\n      const messageMatch = messages.find((msg) => msg.step === i);\n      if (messageMatch) {\n        message = messageMatch.message;\n      }\n      if (message) {\n        overworld.runCommandAsync(`title @p actionbar ${message}`);\n      }\n      if (path.length - 2 == i) {\n        // final point.\n        await overworld.runCommandAsync(`dialogue open @e[tag=${type}Npc] @p ${type}Npc2`); // end of walk dialogue\n      }\n    }, i * 5);\n  }\n}\n\nasync function generatePath(\n  path: { x: number; y: number; z: number }[]\n): Promise<{ x: number; y: number; z: number }[]> {\n  const generatedPath: { x: number; y: number; z: number }[] = [];\n\n  for (let i = 0; i < path.length - 1; i++) {\n    const startCoord = path[i];\n    const endCoord = path[i + 1];\n\n    const xDiff = endCoord.x - startCoord.x;\n    const yDiff = endCoord.y - startCoord.y;\n    const zDiff = endCoord.z - startCoord.z;\n\n    const xStep = Math.sign(xDiff);\n    const yStep = Math.sign(yDiff);\n    const zStep = Math.sign(zDiff);\n\n    const steps = Math.max(Math.abs(xDiff), Math.abs(yDiff), Math.abs(zDiff));\n\n    for (let j = 0; j <= steps; j++) {\n      const x = startCoord.x + xStep * j;\n      const y = startCoord.y + yStep * j;\n      const z = startCoord.z + zStep * j;\n\n      generatedPath.push({ x, y, z });\n    }\n  }\n\n  return generatedPath;\n}\n","import { system, world } from \"@minecraft/server\";\nimport { resetCuisenaireGame } from \"./cuisenaireRods\";\nimport { resetPotionGame } from \"./potionGame\";\nimport { resetWindowGame } from \"./stainedGlassWindow\";\nimport { closeGate } from \"./gate\";\n\nlet overworld = world.getDimension(\"overworld\");\n\nexport async function resetGame() {\n  await overworld.runCommandAsync(`camera @p fade time 0.1 2 0.4`);\n  //Reset the game areas\n  await overworld.runCommandAsync(`tp @p 30 96 106`);\n  await resetCuisenaireGame();\n  await overworld.runCommandAsync(`tp @p -10 97 143`);\n  await resetPotionGame();\n  await overworld.runCommandAsync(`tp @p 71 96 221`);\n  await resetWindowGame();\n  //Reset the NPCs\n  await overworld.runCommandAsync(`tp @e[tag=fractionNpc] 57 88 148`);\n  await overworld.runCommandAsync(`tp @e[tag=scaleNpc] 57 88 148`);\n  await overworld.runCommandAsync(`tp @e[tag=ratioNpc] 57 88 148`);\n  await overworld.runCommandAsync(`tp @e[tag=spawnNpc] 63 97 146 facing 69 97 147`);\n  await overworld.runCommandAsync(`dialogue change @e[tag=spawnNpc] spawnNpc`);\n  await overworld.runCommandAsync(`dialogue change @e[tag=scaleNpc] scaleNpc0`);\n  await overworld.runCommandAsync(`dialogue change @e[tag=ratioNpc] ratioNpc0`);\n  await overworld.runCommandAsync(`dialogue change @e[tag=fractionNpc] fractionNpc0`);\n  //Close the gates\n  await closeGate(\"spawn\");\n  await closeGate(\"scale\");\n  await closeGate(\"ratio\");\n  await closeGate(\"fraction\");\n  //Clean up the player\n  await overworld.runCommandAsync(`gamemode adventure @p`);\n  await overworld.runCommandAsync(`gamerule showcoordinates false`);\n  await overworld.runCommandAsync(`scoreboard objectives setdisplay sidebar`);\n  await overworld.runCommandAsync(`scoreboard players set Coins Depth 0`);\n  await overworld.runCommandAsync(`clear @p`);\n  await overworld.runCommandAsync(`effect @p clear`);\n  await overworld.runCommandAsync(`tp @p 69 97 147 facing 41 97 147`);\n  await overworld.runCommandAsync(`camera @p clear`);\n}\n","import { system, world, WorldAfterEvents, CommandResult } from \"@minecraft/server\";\nimport { startFlythrough } from \"./flythroughs\";\n\nlet overworld = world.getDimension(\"overworld\");\n\nexport async function startGraduation(level: string) {\n  await overworld.runCommandAsync(`camera @p fade time 0.1 0.2 0.2`);\n  overworld.runCommandAsync(`clear @p`);\n  await overworld.runCommandAsync(`tp @p -15 94 159`);\n  if (level == \"junior\") {\n    overworld.runCommandAsync(`fill -15 94 159 -117 96 107 green_carpet replace purple_carpet`);\n    overworld.runCommandAsync(`fill -15 94 159 -117 96 107 yellow_carpet replace red_carpet`);\n    overworld.runCommandAsync(`fill -106.69 111.00 164.45 -113.74 114.00 112.13 yellow_wool replace red_wool`);\n    overworld.runCommandAsync(`fill -106.69 111.00 164.45 -113.74 114.00 112.13 green_wool replace purple_wool`);\n    overworld.runCommandAsync(`dialogue change @e[tag=spawnNpc] spawnNpc2`);\n  } else if (level == \"senior\") {\n    overworld.runCommandAsync(`fill -15 94 159 -117 96 107 purple_carpet replace green_carpet`);\n    overworld.runCommandAsync(`fill -15 94 159 -117 96 107 red_carpet replace yellow_carpet`);\n    overworld.runCommandAsync(`fill -106.69 111.00 164.45 -113.74 114.00 112.13 red_wool replace yellow_wool`);\n    overworld.runCommandAsync(`fill -106.69 111.00 164.45 -113.74 114.00 112.13 purple_wool replace green_wool`);\n    overworld.runCommandAsync(`dialogue change @e[tag=spawnNpc] spawnNpc3`);\n  }\n  overworld.runCommandAsync(`replaceitem entity @p slot.armor.head 0 blockbuilders:mortar_board`);\n  overworld.runCommandAsync(`tp @e[tag=spawnNpc] -103.02 96.06 142.69 facing -104 96 134`);\n  overworld.runCommandAsync(`tp @e[tag=fractionNpc] -107.49 96.00 138.56 facing -101.49 96.00 138.56`);\n  overworld.runCommandAsync(`dialogue change @e[tag=fractionNpc] fractionNpc9`);\n  overworld.runCommandAsync(`tp @e[tag=ratioNpc] -107.39 96.00 140.05 facing -101.39 96.00 140.05`);\n  overworld.runCommandAsync(`dialogue change @e[tag=ratioNpc] ratioNpc11`);\n  overworld.runCommandAsync(`tp @e[tag=scaleNpc] -107.31 96.00 141.96 facing -101.31 96.00 141.96`);\n  overworld.runCommandAsync(`dialogue change @e[tag=scaleNpc] scaleNpc16`);\n  startFlythrough(\"graduation\");\n}\n","import { world, system, Player } from \"@minecraft/server\";\n\nlet overworld = world.getDimension(\"overworld\");\n\ntype Command = {\n  command: string;\n  interval: number;\n};\nexport async function startFlythrough(type: string) {\n  switch (type) {\n    case \"graduation\": {\n      let path = await generatePath([\n        { x: -25, y: 98, z: 134 },\n        { x: -104, y: 98, z: 134 },\n      ]);\n      let commands = [\n        { command: \"tp @p -104 96 134 facing -104 96 142\", interval: 0 },\n        { command: \"particle blockbuilders:spell -111.47 114.00 148.60\", interval: 44 },\n        { command: \"particle blockbuilders:spell -112.02 105.06 118.80\", interval: 56 },\n        { command: \"particle blockbuilders:spell -119.70 115.98 134.62\", interval: 74 },\n        { command: \"particle blockbuilders:spell -98.90 105.53 158.17\", interval: 36 },\n        { command: \"particle blockbuilders:spell -108.35 110.22 143.91\", interval: 62 },\n        { command: \"particle blockbuilders:spell -115.80 108.75 139.30\", interval: 51 },\n        { command: \"particle blockbuilders:spell -103.64 112.40 152.08\", interval: 68 },\n        { command: \"particle blockbuilders:spell -117.93 106.88 129.75\", interval: 47 },\n        { command: \"particle blockbuilders:spell -101.21 109.60 146.53\", interval: 59 },\n      ];\n      playerFlythrough(path, 1.5, commands);\n      break;\n    }\n    default:\n      world.sendMessage(\"Flythough type: \" + type + \" not found\");\n      break;\n  }\n}\n\nasync function playerFlythrough(path: { x: number; y: number; z: number }[], speed: number, commands: Command[]) {\n  let player = world.getAllPlayers()[0];\n  let message = \"\";\n  for (let i = 0; i < path.length - 1; i++) {\n    let location = path[i];\n    const nextPoint = path[i + 1];\n    const facingLocation = { x: nextPoint.x, y: nextPoint.y, z: nextPoint.z };\n\n    system.runTimeout(async () => {\n      await overworld.runCommandAsync(\n        `camera @p set minecraft:free pos ${location.x} ${location.y} ${location.z} facing ${facingLocation.x} ${facingLocation.y} ${facingLocation.z}`\n      ); // start of walk dialogue\n      for (const command of commands) {\n        if (command.interval === 0) {\n          await overworld.runCommandAsync(command.command);\n        } else if (i % command.interval === 0) {\n          await overworld.runCommandAsync(command.command);\n        }\n      }\n      if (path.length - 5 == i) {\n        await overworld.runCommandAsync(`camera @p fade time 0.2 0.2 0.2`); // end of walk dialogue\n      }\n      if (path.length - 2 == i) {\n        // final point.\n        await overworld.runCommandAsync(`camera @p clear`); // end of walk dialogue\n      }\n    }, i * speed);\n  }\n}\n\nasync function generatePath(\n  path: { x: number; y: number; z: number }[]\n): Promise<{ x: number; y: number; z: number }[]> {\n  const generatedPath: { x: number; y: number; z: number }[] = [];\n\n  for (let i = 0; i < path.length - 1; i++) {\n    const startCoord = path[i];\n    const endCoord = path[i + 1];\n\n    const xDiff = endCoord.x - startCoord.x;\n    const yDiff = endCoord.y - startCoord.y;\n    const zDiff = endCoord.z - startCoord.z;\n\n    const xStep = Math.sign(xDiff);\n    const yStep = Math.sign(yDiff);\n    const zStep = Math.sign(zDiff);\n\n    const steps = Math.max(Math.abs(xDiff), Math.abs(yDiff), Math.abs(zDiff));\n\n    for (let j = 0; j <= steps; j++) {\n      const x = startCoord.x + xStep * j;\n      const y = startCoord.y + yStep * j;\n      const z = startCoord.z + zStep * j;\n      generatedPath.push({ x, y, z });\n    }\n  }\n\n  return generatedPath;\n}\n"],"mappings":"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","names":["world","system","BlockPermutation","world","BlockPermutation","world","overworld","world","BlockPermutation","BlockPermutation","world","overworld","overworld","world","overworld","overworld","overworld","BlockPermutation","world","system","overworld","world","BlockPermutation","system","index","block","BlockPermutation","system","world","overworld","world","BlockPermutation","potion","seconds","potionStart","system","system","world","world","overworld","world","system","overworld","moveNpc","world","overworld","world","world","world","system","overworld","generatePath","overworld","world","overworld","world","system","overworld","world","rod","BlockPermutation","potion","seconds","system"],"file":"../scripts/main.js"}