{"version":3,"sources":["../../scripts/main.ts","../../scripts/input.ts","../../scripts/calculator.ts","../../scripts/output.ts","../../scripts/numberHandler.ts","../../scripts/fraction.ts","../../scripts/ratio.ts","../../scripts/scaler.ts","../../scripts/rod.ts"],"sourcesContent":["import { BlockPermutation, world } from \"@minecraft/server\";\nimport { calculate } from \"./calculator\";\nimport { fraction1 } from \"./fraction\";\nimport { ratio1 } from \"./ratio\";\nimport { scale, resetArea } from \"./scaler\";\nimport { cuisenaire } from \"./rod\";\nimport { cycleNumberBlock } from \"./output\";\n\n//listens for the button push event.\nworld.afterEvents.buttonPush.subscribe(async(event) => {\n  switch (`${event.block.location.x},${event.block.location.y},${event.block.location.z}`) {\n    case \"-11,-60,94\": {\n      calculate();\n      break;\n    }\n    case \"-27,-60,94\": {\n      fraction1();\n      break;\n    }\n    case \"-40,-60,94\": {\n      ratio1();\n      break;\n    }\n    case \"-3,-60,154\": {\n      scale();\n      break;\n    }\n    case \"-3,-60,153\": {\n      await resetArea();\n      break;\n    }\n    case \"-3,-60,90\": {\n      world.getDimension(\"overworld\").runCommand(\"function lava\")\n    }\n  }\n});\n\n//listens for the block place event.\nworld.afterEvents.playerPlaceBlock.subscribe(async(event) => {\n  switch (`${event.block.location.x},${event.block.location.y},${event.block.location.z}`) {\n    case \"-1,-61,89\": { \n      cuisenaire(event, \"green_concrete\", 6, \"Correct! 6 is half of 12\", \"That is not half of 12!\");\n      break;\n    }\n    case \"-1,-61,83\": { \n      cuisenaire(event, \"green_concrete\", 6, \"Well done you made a 12 from two 6 rods.\", \"That is not half of 12!\");\n      break;\n    }\n    case \"1,-61,89\": {\n      cuisenaire(event, \"brown_concrete\", 8, \"Correct! 8 is two thirds of 12.\", \"Not quite, what is two thirds of 12?\");\n      break;\n    }\n    case \"1,-61,81\": {\n      cuisenaire(event, \"purple_concrete\", 4, \"Well done you made 12 by adding 8 to 4.\", \"Nope, what is one third of 12?\");\n      break;\n    }\n    case \"3,-61,89\": {\n      cuisenaire(event, \"green_concrete\", 6, \"Correct you are halfway there!\", \"Not quite! What is half of 12?\");\n      break;\n    }\n    case \"3,-61,83\": {\n      cuisenaire(event, \"purple_concrete\", 4, \"Almost there only two to go!\", \"Not quite! What is one third of 12?\");\n      break;\n    }\n    case \"3,-61,79\": {\n      cuisenaire(event, \"red_concrete\", 2, \"Well done you made 12 by adding 6 + 4 + 2.\", \"Not quite! It needs to be 1/6 of 12.\");\n      break;\n    }\n}}\n  );\n\n\n\nworld.afterEvents.playerBreakBlock.subscribe((clickEvent) => {\n  let hand_item = clickEvent.itemStackAfterBreak?.typeId; //gets the item in the players hand\n  if (hand_item === \"minecraft:stick\") {\n    cycleNumberBlock(clickEvent);\n  }\n});\n//right click\nworld.afterEvents.itemUse.subscribe((eventData) => {\n  let player = eventData.source; // Get the player that waved the wand\n  if (eventData.itemStack.typeId == \"minecraft:stick\") { //tests for the wand.\n    player.sendMessage(\"Right click\"); //sends a message to the player\n  }\n}\n);\n\n\n","import { BlockPermutation, Vector3, world } from \"@minecraft/server\";\n\nlet overworld = world.getDimension(\"overworld\");\n\n//combines multiple digits into a single number\nexport function getInput(digits: Vector3[]): number {\n    let combinedString = '';\n    for (let digit of digits) {\n        let digitValue = getNumberValue(digit);\n        combinedString += digitValue;\n    }\n    let combinedNumber = parseInt(combinedString);\n    return combinedNumber;\n}\n\n//gets the block and permutation of a cuboid selection\n//if it doesn't work make sure pos1 is the bottom left corner and pos2 is the top right corner\nexport async function getCube(pos1: Vector3, pos2: Vector3) {\n  const blocks = [];\n  //world.sendMessage(\"pos1 = \" + pos1.x + \",\" + pos1.y + \",\" + pos1.z);\n  //world.sendMessage(\"pos2 = \" + pos2.x + \",\" + pos2.y + \",\" + pos2.z);\n  for(let x3 = pos1.x; x3 <= pos2.x; x3++) {\n        for(let y3 = pos1.y; y3 <= pos2.y; y3++) {\n            for(let z3 = pos1.z; z3 <= pos2.z; z3++) {\n                const location = {x: x3, y: y3, z: z3};\n                const blockValue = getBlockValue(location);\n                blocks.push(blockValue);\n            }\n        }\n  }\n \n  return blocks;\n}\n\n//converts a block to a number value\nfunction getNumberValue(location: Vector3) {\n    let {block, permutation} = getBlockValue(location);\n    for (let i = 0; i < 10; i++) {//check for element_0 to element_9\n        if (permutation?.matches(\"blockbuilders:number_\" + i)) {\n          return i;\n        }\n      }\n      block?.setPermutation(BlockPermutation.resolve(\"blockbuilders:number_0\")); //if no match is found, default to element_0\n      return 0; //if no match is found, return 0\n    }\n\n//gets the block and permutation of a block at a specific location\nexport function getBlockValue(location: Vector3) {\n    const block = overworld.getBlock(location); //get the block at the location\n    const permutation = block?.permutation; //get the permutation of the block\n    return {block, permutation};\n  }\n  \n//gets the block and permutation of a block at a specific location\nexport async function getAsyncBlockValue(location: Vector3) {\n  const block = overworld.getBlock(location); //get the block at the location\n  const permutation = block?.permutation; //get the permutation of the block\n  return {block, permutation};\n}\n","import { getBlockValue } from \"./input\";\nimport { world } from \"@minecraft/server\";\nimport { getInput } from \"./input\";\nimport { outputTotal, clearAnswer } from \"./output\";\nimport { roundToDigits } from \"./numberHandler\";\n\n//calculates the total based on the block in the center\nfunction calculateTotal(leftvalue: number, rightvalue: number){\n    let {block, permutation} = getBlockValue({x: -11, y: -59, z: 93});\n    world.sendMessage(\"The sum is:\")\n    if (permutation?.matches(\"blockbuilders:symbol_plus\")) {\n      world.sendMessage(leftvalue + \"+\" + rightvalue)\n      let total = leftvalue + rightvalue;\n      return total;\n    }\n    else if (permutation?.matches(\"blockbuilders:symbol_subtract\")) {\n      world.sendMessage(leftvalue + \"-\" + rightvalue)\n      let total = leftvalue - rightvalue;\n      return total;\n    }\n    else if (permutation?.matches(\"blockbuilders:symbol_times\")) {\n      world.sendMessage(leftvalue + \"*\" + rightvalue)\n      let total = leftvalue * rightvalue;\n      return total;\n    }\n    else if (permutation?.matches(\"blockbuilders:symbol_divide\")) { \n      world.sendMessage(leftvalue + \"/\" + rightvalue)\n      let total = leftvalue / rightvalue;\n      return total;\n    }\n    else {\n      world.sendMessage(\"Add a +, -, *, or / block to the center to perform an operation.\");\n    }\n  }\nexport async function calculate(){\n  await clearAnswer({x: -14, y: -57, z: 93}, {x: -8, y: -57, z: 93})\n  let leftInput = getInput([{x: -14, y: -59, z: 93}, {x: -13, y: -59, z: 93}, {x: -12, y: -59, z: 93}]);\n  let rightInput = getInput([{x: -10, y: -59, z: 93}, {x: -9, y: -59, z: 93}, {x: -8, y: -59, z: 93}]);\n  let total = calculateTotal(leftInput, rightInput);\n  if (total !== null && total !== undefined) {\n    let roundedTotal = roundToDigits(total, 6);\n    outputTotal(roundedTotal, {x: -8, y: -57, z: 93});\n    world.sendMessage(\"The total is:\");\n    if (roundedTotal === total){\n      world.sendMessage(`${total}.`);\n    }\n    else {\n      world.sendMessage(`${total} and has been rounded to ${roundedTotal}.`);\n    }\n  }\n  else {\n    world.sendMessage(\"Please input a number.\");\n  }\n}","import { BlockPermutation, Vector3, world} from \"@minecraft/server\";\nimport { getBlockValue } from \"./input\";\n\nconst overworld = world.getDimension(\"overworld\");\n//outputs the total to the screen\nexport function outputTotal(total: number, location: Vector3){\n    let blockName = \"\";\n    let totalString = ('' + total).split('').reverse().join(''); //reverses the string so it can be read from right to left\n    for (let i = 0; i < totalString.length; i++){\n      let {block, permutation} = getBlockValue(location);\n      if (totalString[i] === '.') {\n        blockName = \"blockbuilders:symbol_decimalpoint\";\n      } else {\n        let digit = parseInt(totalString[i]);\n        blockName = \"blockbuilders:number_\" + digit;\n      }\n      block?.setPermutation(BlockPermutation.resolve(blockName));\n      location.x -= 1;\n    }\n  }\n\n  export function setBlock(location: Vector3, blockName: string){\n    let {block} = getBlockValue(location);\n    block?.setPermutation(BlockPermutation.resolve(blockName));\n  }\n\n  export async function clearAnswer(start: Vector3, end: Vector3) {\n    overworld.runCommandAsync(`fill ${start.x} ${start.y} ${start.z} ${end.x} ${end.y} ${end.z} air replace`);\n  }\n\n  export function cycleNumberBlock(clickEvent: any){\n    for (let i = 0; i < 9; i++) {//check for element_0 toplement_8\n      if (clickEvent.brokenBlockPermutation?.matches(\"blockbuilders:number_\" + i)) {\n        let nextNumber = i + 1;\n        let blockname = \"blockbuilders:number_\" + nextNumber;\n        clickEvent.block.setPermutation(BlockPermutation.resolve(blockname));\n      }\n    if (clickEvent.brokenBlockPermutation?.matches(\"blockbuilders:number_9\")) {\n      clickEvent.block.setPermutation(BlockPermutation.resolve(\"blockbuilders:number_0\"));\n    }\n  }\n  }","export function roundToDigits(num: number, digits: number) {\n    let numStr = num.toString();\n    if (numStr.length > digits) {\n        if (numStr.includes('.')) {\n            let [whole, decimal] = numStr.split('.');\n            if (whole.length >= digits) {\n                return parseFloat(whole.slice(0, digits));\n            } else {\n                let decimalDigits = digits - whole.length;\n                return parseFloat(num.toFixed(decimalDigits));\n            }\n        } else {\n            return parseFloat(numStr.slice(0, digits));\n        }\n    } else {\n        return num;\n    }\n  }","import { world } from \"@minecraft/server\";\nimport { getInput } from \"./input\";\nimport { outputTotal, clearAnswer } from \"./output\";\nimport { roundToDigits } from \"./numberHandler\";\n\n//calculates the fraction of a number\nexport async function fraction1(){\n    let outputRight = {x: -22, y: -59, z: 93};\n    let outputLeft= {x: -26, y: -59, z: 93};\n    await clearAnswer(outputRight, outputLeft);\n    let numerator = getInput([{x: -28, y: -57, z: 93}]);\n    let denominator = getInput([{x: -28, y: -59, z: 93}]);\n    let input = getInput([{x: -26, y: -57, z: 93}, {x: -25, y: -57, z: 93}, {x: -24, y: -57, z: 93}]);\n    world.sendMessage(\"The fraction is:\");\n    world.sendMessage(numerator + \"/\" + denominator + \" of \" + input);\n    let fraction = calculateFraction(numerator, denominator);\n    let result = fraction * input;\n    world.sendMessage(\"The Output is:\");\n    let roundedFraction = roundToDigits(result, 4);\n    if (result === roundedFraction) {\n        world.sendMessage('' + roundedFraction);\n    }\n    else {\n        world.sendMessage('' + result + \" which has been rounded to \" + roundedFraction);\n    }\n    outputTotal(roundedFraction, outputRight);\n}\n\nfunction calculateFraction(numerator: number, denominator: number): number {\n    if (denominator === 0) {\n        world.sendMessage(\"The denominator cannot be 0. Please input a different number.\")\n    }\n    return numerator / denominator;\n}","import { world, BlockPermutation, Vector3 } from \"@minecraft/server\";\nimport { getBlockValue } from \"./input\";\nimport { outputTotal, clearAnswer } from \"./output\";\nimport { roundToDigits } from \"./numberHandler\";\n\n\nexport async function ratio1() {\n    let output1 = {x: -42, y: -59, z: 93};\n    let output2 = {x: -40, y: -59, z: 93};\n    world.sendMessage(\"Calculating the ratio of pink to yellow blocks.\");\n    let ratioInput = [{x: -37, y:-58, z:93},{x: -39, y: -60, z: 93}, {x: -38, y: -60, z: 93}, {x: -37, y: -60, z: 93}, {x: -36, y: -60, z: 93}, {x: -35, y: -60, z: 93}, {x: -38, y: -59, z: 93}, {x: -37, y: -59, z: 93}, {x: -36, y: -59, z: 93}];\n    let { pink, yellow } = calculateRatio(ratioInput); // Assign values to pink and yellow variables\n    world.sendMessage(\"The ratio is:\");\n    world.sendMessage(pink + \":\" + yellow);\n    outputTotal(pink, output1);\n    outputTotal(yellow, output2);\n}\n\nfunction calculateRatio(ratioInput: Vector3[]){\n    let yellow = 0\n    let pink = 0\n    for (let i = 0; i < ratioInput.length; i++) {\n        let {block, permutation} = getBlockValue(ratioInput[i]);\n        if (permutation?.matches(\"yellow_concrete\")) {\n            yellow++   \n        }\n        else if (permutation?.matches(\"pink_concrete\")) {\n            pink++;\n        }\n    }\n    \n    return { pink, yellow };\n}\n","import { world  } from \"@minecraft/server\";\nimport { getCube } from \"./input\";\nimport { setBlock } from \"./output\";\nimport { getInput } from \"./input\";\n\nlet overworld = world.getDimension(\"overworld\");\n\nlet glass = [\"magenta\", \"orange\", \"light_blue\", \"yellow\", \"lime\", \"pink\", \"gray\", \"light_gray\", \"cyan\", \"purple\", \"blue\", \"brown\", \"green\", \"red\", \"black\", \"white\"];\n\n\nexport async function scale() {\n  const blocks = await getCube({x: 13, y: -60, z: 142}, {x: 13, y: -51, z: 148});\n  let shape = []\n  let scaleFactor = getInput([{x: 12, y: -58, z: 149}]);\n\n  for (const block of blocks) {\n    for (const colour of glass) {\n      if (block.permutation?.matches(colour + \"_stained_glass\")) {\n        let location = {x: block.block?.x, y: block.block?.y, z: block.block?.z, colour: colour};\n        shape.push(location);\n      }\n  }\n  let scaledShape = await scaleShape(shape, scaleFactor, \"yz\");\n  for (const block of scaledShape) {\n    let offset_z = block.z + 15; //shifts the shape to the right\n    let offset_x = block.x + 10;\n    let offset_y = block.y + 5;\n    setBlock({x: offset_x, y: offset_y, z: offset_z}, block.colour + \"_stained_glass\")\n  }\n}\n}\n\nexport async function resetArea(){\n  await overworld.runCommandAsync(\"fill 20 -60 153 32 -40 221 air replace\");\n  await overworld.runCommandAsync(\"fill 20 -40 153 32 -20 221 air replace\");\n  await overworld.runCommandAsync(\"fill 20 -20 153 32 0 221 air replace\");\n  await overworld.runCommandAsync(\"fill 20 0 153 32 30 221 air replace\");\n  await overworld.runCommandAsync(\"clone -49 -60 151 -47 -23 175 21 -60 153 replace\");\n}\n\nexport async function scaleShape(shape: any , scaleFactor: any, axes: string) {\n  const scaledShape = [];\n  // Find the minimum coordinates to use as the base point of the shape\n  const basePoint = shape.reduce((min: any, block: any) => ({\n      x: Math.min(min.x, block.x),\n      y: Math.min(min.y, block.y),\n      z: Math.min(min.z, block.z),\n  }), shape[0]);\n\n  for (const block of shape) {\n      // Calculate the relative position of the block within the shape\n      const relativePos = {\n          x: block.x - basePoint.x,\n          y: block.y - basePoint.y,\n          z: block.z - basePoint.z,\n      };\n\n      // Scale the relative position\n      for (let i = axes.includes('x') ? 0 : scaleFactor - 1; i < scaleFactor; i++) {\n          for (let j = axes.includes('y') ? 0 : scaleFactor - 1; j < scaleFactor; j++) {\n              for (let k = axes.includes('z') ? 0 : scaleFactor - 1; k < scaleFactor; k++) {\n                  // Add the scaled relative position to the base point\n                  const scaledBlock = {\n                      x: basePoint.x + (axes.includes('x') ? relativePos.x * scaleFactor + i : relativePos.x),\n                      y: basePoint.y + (axes.includes('y') ? relativePos.y * scaleFactor + j : relativePos.y),\n                      z: basePoint.z + (axes.includes('z') ? relativePos.z * scaleFactor + k : relativePos.z),\n                      colour: block.colour,\n                  };\n                  scaledShape.push(scaledBlock);\n              }\n          }\n      }\n  }\n  return scaledShape;\n}","import { BlockPermutation, world } from \"@minecraft/server\";\nlet overworld = world.getDimension(\"overworld\")\n\nexport function cuisenaire(event: any, blockName: string, rodLength: number, successMessage: string, failureMessage: string) {\n    if (event.block.permutation?.matches(blockName)) {\n      overworld.runCommand(\"title @p actionbar \" + successMessage);\n      for (let i = 0; i < rodLength; i++) {\n        event.block.north(i)?.setPermutation(BlockPermutation.resolve(blockName));\n        }\n    } else {\n      overworld.runCommand(\"title @p actionbar \" + failureMessage);\n      world.sendMessage(failureMessage);\n      event.block.setPermutation(BlockPermutation.resolve(\"lava\"));   \n    }\n  }\n"],"mappings":"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","names":["world","world","BlockPermutation","world","overworld","world","BlockPermutation","world","world","world","world","world","world","overworld","world","block","BlockPermutation","world","overworld","world"],"file":"../scripts/main.js"}