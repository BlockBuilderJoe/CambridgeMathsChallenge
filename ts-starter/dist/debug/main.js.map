{"version":3,"sources":["../../scripts/main.ts","../../scripts/input.ts","../../scripts/calculator.ts","../../scripts/output.ts","../../scripts/numberHandler.ts","../../scripts/fraction.ts","../../scripts/ratio.ts","../../scripts/scaler.ts","../../scripts/rod.ts","../../scripts/perfectRun.ts","../../scripts/playerFacing.ts","../../scripts/potion.ts","../../scripts/npcscriptEventHandler.ts"],"sourcesContent":["import { world, system, Player, BlockPermutation, Block, Entity, Scoreboard } from \"@minecraft/server\";\nimport { calculate } from \"./calculator\";\nimport { fraction1 } from \"./fraction\";\nimport { ratio1 } from \"./ratio\";\nimport { scale, resetArea } from \"./scaler\";\nimport { cuisenaire, getBlockBehind, resetGrid, giveRods, resetNPC, directionCheck } from \"./rod\";\nimport { perfectRun } from \"./perfectRun\";\nimport { cycleNumberBlock } from \"./output\";\nimport { facing } from \"./playerFacing\";\nimport { potionMaker, displayTimer } from \"./potion\";\nimport \"./npcscriptEventHandler\"; //handles the NPC script events\n\nlet potion: string = \"\";\nlet seconds: number = 0;\nlet currentPlayer = null;\nlet potionStart = 0;\nlet potionDrank = false;\nlet meters = 0;\nlet rodsToRemove: any[] = [];\n\n//welcome player\nworld.afterEvents.playerSpawn.subscribe((eventData) => {\n  currentPlayer = eventData.player;\n  let initialSpawn = eventData.initialSpawn;\n  if (initialSpawn) {\n    currentPlayer.sendMessage(`§3Welcome back ${currentPlayer.name}!`);\n    currentPlayer.runCommandAsync(\n      `give @p[hasitem={item=stick,quantity=0}] stick 1 0 {\"item_lock\": { \"mode\": \"lock_in_slot\" }}`\n    );\n  } else {\n    currentPlayer.sendMessage(`<BlockBuilderAI> §3Welcome ${currentPlayer.name}!`);\n    currentPlayer.runCommandAsync(\n      `give @a[hasitem={item=stick,quantity=0}] stick 1 0 {\"item_lock\": { \"mode\": \"lock_in_slot\" }}`\n    );\n  }\n});\n\n//listens for the button push event.\nworld.afterEvents.buttonPush.subscribe(async (event) => {\n  switch (`${event.block.location.x},${event.block.location.y},${event.block.location.z}`) {\n    case \"-11,-60,94\": {\n      calculate();\n      break;\n    }\n    case \"-27,-60,94\": {\n      fraction1();\n      break;\n    }\n    case \"-40,-60,94\": {\n      ratio1();\n      break;\n    }\n    case \"-3,-60,154\": {\n      scale();\n      break;\n    }\n    case \"-3,-60,153\": {\n      await resetArea();\n      break;\n    }\n    case \"29,97,106\": {\n      let player = event.source as Entity; // Cast event.source to Player type\n      rodsToRemove = []; //resets the rods to remove array\n      await resetNPC(13);\n      await giveRods(player, rodsToRemove);\n      await resetGrid({ x: 19, y: 95, z: 81 }); //top left corner of the area.\n      break;\n    }\n    case \"24,95,45\": {\n      let player = event.source as Entity; // Cast event.source to Player type\n      //await replayRods(player, perfectRun); // Pass the casted player as an argument\n      break;\n    }\n  }\n});\n\n//listens for the block place event.\nworld.afterEvents.playerPlaceBlock.subscribe(async (event) => {\n  let block = event.block;\n  let player = event.player;\n  let colour = block.permutation?.getState(\"color\");\n  if (colour) {\n    //is it a rod block?w wsa   w\n    if (block.location.y === 95) {\n      //is it placed on the grid?\n      let viewDirection = event.player.getViewDirection();\n      let { direction, oppositeDirection } = await facing(viewDirection);\n      let correctDirection = await directionCheck(block.location.x, block.location.z, direction);\n      let hasColour = await getBlockBehind(event, oppositeDirection);\n      const rodPermutations = {\n        red: { block: \"red_concrete\", value: 2, message: \"Placed a twelth rod\" },\n        lime: { block: \"lime_concrete\", value: 3, message: \"Placed an eigth rod\" },\n        purple: { block: \"purple_concrete\", value: 4, message: \"Placed a sixth rod\" },\n        green: { block: \"green_concrete\", value: 6, message: \"Placed a quarter rod\" },\n        brown: { block: \"brown_concrete\", value: 8, message: \"Placed a third rod\" },\n        yellow: { block: \"yellow_concrete\", value: 12, message: \"Placed a half rod\" },\n        blue: { block: \"blue_concrete\", value: 24, message: \"Placed a whole rod\" },\n      };\n\n      if (!hasColour) {\n        player.runCommandAsync(`title ${player.name} actionbar Place the rod in front of the magical connector.`);\n        event.block.setPermutation(BlockPermutation.resolve(\"tallgrass\"));\n        return;\n      }\n      if (!correctDirection) {\n        player.runCommandAsync(`title ${player.name} actionbar You're facing the wrong way.`);\n        event.block.setPermutation(BlockPermutation.resolve(\"tallgrass\"));\n        return;\n      }\n      const rod = rodPermutations[colour as keyof typeof rodPermutations];\n      if (rod) {\n        cuisenaire(block, rod.block, rod.value, rod.message, direction);\n      }\n    }\n  }\n});\n\nworld.afterEvents.playerBreakBlock.subscribe((clickEvent) => {\n  let hand_item = clickEvent.itemStackAfterBreak?.typeId; //gets the item in the players hand\n  if (hand_item === \"minecraft:stick\") {\n    cycleNumberBlock(clickEvent);\n  }\n});\n\nworld.beforeEvents.itemUseOn.subscribe(async (event) => {\n  if (event.itemStack?.typeId === \"minecraft:stick\") {\n    let block = event.block;\n    if (block.permutation?.matches(\"hopper\")) {\n      event.cancel = true;\n      ({ potion, seconds } = await potionMaker(event));\n    }\n  }\n});\n\n//wellwellwell\nfunction applyPotionEffect(player: any, potion: string, seconds: number) {\n  player.runCommand(\"scoreboard objectives setdisplay sidebar Depth\");\n  let tick = seconds * 20; //converts seconds to ticks\n  potionStart = system.currentTick;\n  switch (potion) {\n    case \"water_breathing\": {\n      player.addEffect(\"water_breathing\", tick);\n      break;\n    }\n    case \"night_vision\": {\n      player.addEffect(\"night_vision\", tick);\n      break;\n    }\n    case \"blindness\": {\n      player.addEffect(\"blindness\", tick);\n      break;\n    }\n    case \"poison\": {\n      player.addEffect(\"poison\", tick);\n      break;\n    }\n    case \"levitation\": {\n      player.addEffect(\"levitation\", tick);\n      break;\n    }\n  }\n  player.runCommand(\"clear @p minecraft:glass_bottle\");\n}\n\nfunction mainTick() {\n  world.getAllPlayers().forEach((player) => {\n    if (player.isInWater == true) {\n      meters = 58 - Math.floor(player.location.y);\n      player.runCommand(`scoreboard players set Meters Depth ${meters}`);\n\n      if (potionDrank) {\n        //applies the potion effect once\n        applyPotionEffect(player, potion, seconds);\n        potionDrank = false;\n      }\n      if (player.getEffect(\"water_breathing\")) {\n        displayTimer(potionStart, seconds, player, \"Breathing underwater\");\n      } else if (player.getEffect(\"night_vision\")) {\n        displayTimer(potionStart, seconds, player, \"Great work you can see in the dark for\");\n      } else if (player.getEffect(\"blindness\")) {\n        displayTimer(potionStart, seconds, player, \"Oh no! The ratios were wrong, you can't see anything for\");\n      } else if (player.getEffect(\"levitation\")) {\n        displayTimer(potionStart, seconds, player, \"Oh no! You're floating for\");\n      }\n      if (player.isSneaking == true) {\n        surface(player);\n        //player.sendMessage(\"§fThat's poor form you can't try and sink faster, whatever happened to honour?\");\n      }\n    }\n  });\n  system.run(mainTick);\n}\nasync function surface(player: any) {\n  player.teleport({ x: -50, y: 60, z: 132 });\n  player.addEffect(\"instant_health\", 5);\n  player.removeEffect(\"blindness\");\n  player.removeEffect(\"night_vision\");\n  player.removeEffect(\"water_breathing\");\n  player.runCommand(\"scoreboard objectives setdisplay sidebar\");\n}\n//listens for the potion to be fully drunk.\nworld.afterEvents.itemCompleteUse.subscribe(async (event) => {\n  let player = event.source;\n  if (event.itemStack?.typeId === \"minecraft:potion\") {\n    if (potion === \"poison\") {\n      player.sendMessage(\n        \"§fYou mixed the potion with the §2wrong ingredients. \\n§fIt has had no effect.\\nMake sure you're using the correct ingredients.\"\n      );\n    } else {\n      potionDrank = true;\n      player.sendMessage(\"§fYou drank the potion. \\n§2Jump in the well §fto see the effect.\");\n    }\n    event.source.runCommand(\"clear @p minecraft:glass_bottle\");\n  }\n});\n\n//listens for the entity health changed event so they don't drown.\nworld.afterEvents.entityHealthChanged.subscribe(async (event) => {\n  if (event.entity.typeId === \"minecraft:player\") {\n    let player: Player = event.entity as Player;\n    if (player.isInWater == true) {\n      await surface(player);\n      //player.sendMessage(`§fYou made it to a depth of: §2${meters} meters \\n§fOnly ${98 - meters} meters to the bottom. `);\n    }\n  }\n});\n\nsystem.run(mainTick);\n","import { BlockPermutation, Vector3, world } from \"@minecraft/server\";\n\nlet overworld = world.getDimension(\"overworld\");\n\n//combines multiple digits into a single number\nexport function getInput(digits: Vector3[]): number {\n  let combinedString = \"\";\n  for (let digit of digits) {\n    let digitValue = getNumberValue(digit);\n    combinedString += digitValue;\n  }\n  let combinedNumber = parseInt(combinedString);\n  return combinedNumber;\n}\n\n//gets the block and permutation of a cuboid selection\n//if it doesn't work make sure pos1 is the bottom left corner and pos2 is the top right corner\nexport async function getCube(pos1: Vector3, pos2: Vector3) {\n  const blocks = [];\n  //world.sendMessage(\"pos1 = \" + pos1.x + \",\" + pos1.y + \",\" + pos1.z);\n  //world.sendMessage(\"pos2 = \" + pos2.x + \",\" + pos2.y + \",\" + pos2.z);\n  for (let x3 = pos1.x; x3 <= pos2.x; x3++) {\n    for (let y3 = pos1.y; y3 <= pos2.y; y3++) {\n      for (let z3 = pos1.z; z3 <= pos2.z; z3++) {\n        const location = { x: x3, y: y3, z: z3 };\n        const blockValue = getBlockValue(location);\n        blocks.push(blockValue);\n      }\n    }\n  }\n\n  return blocks;\n}\n\n//converts a block to a number value\nfunction getNumberValue(location: Vector3) {\n  let { block, permutation } = getBlockValue(location);\n  for (let i = 0; i < 10; i++) {\n    //check for element_0 to element_9\n    if (permutation?.matches(\"blockbuilders:number_\" + i)) {\n      return i;\n    }\n  }\n  block?.setPermutation(BlockPermutation.resolve(\"blockbuilders:number_0\")); //if no match is found, default to element_0\n  return 0; //if no match is found, return 0\n}\n\n//gets the block and permutation of a block at a specific location\nexport function getBlockValue(location: Vector3) {\n  const block = overworld.getBlock(location); //get the block at the location\n  const permutation = block?.permutation; //get the permutation of the block\n  return { block, permutation };\n}\n\n//gets the block and permutation of a block at a specific location\nexport async function getAsyncBlockValue(location: Vector3) {\n  const block = overworld.getBlock(location); //get the block at the location\n  const permutation = block?.permutation; //get the permutation of the block\n  return { block, permutation };\n}\n","import { getBlockValue } from \"./input\";\nimport { world } from \"@minecraft/server\";\nimport { getInput } from \"./input\";\nimport { outputTotal, clearAnswer } from \"./output\";\nimport { roundToDigits } from \"./numberHandler\";\n\n//calculates the total based on the block in the center\nfunction calculateTotal(leftvalue: number, rightvalue: number) {\n  let { block, permutation } = getBlockValue({ x: -11, y: -59, z: 93 });\n  world.sendMessage(\"The sum is:\");\n  if (permutation?.matches(\"blockbuilders:symbol_plus\")) {\n    world.sendMessage(leftvalue + \"+\" + rightvalue);\n    let total = leftvalue + rightvalue;\n    return total;\n  } else if (permutation?.matches(\"blockbuilders:symbol_subtract\")) {\n    world.sendMessage(leftvalue + \"-\" + rightvalue);\n    let total = leftvalue - rightvalue;\n    return total;\n  } else if (permutation?.matches(\"blockbuilders:symbol_times\")) {\n    world.sendMessage(leftvalue + \"*\" + rightvalue);\n    let total = leftvalue * rightvalue;\n    return total;\n  } else if (permutation?.matches(\"blockbuilders:symbol_divide\")) {\n    world.sendMessage(leftvalue + \"/\" + rightvalue);\n    let total = leftvalue / rightvalue;\n    return total;\n  } else {\n    world.sendMessage(\"Add a +, -, *, or / block to the center to perform an operation.\");\n  }\n}\nexport async function calculate() {\n  await clearAnswer({ x: -14, y: -57, z: 93 }, { x: -8, y: -57, z: 93 });\n  let leftInput = getInput([\n    { x: -14, y: -59, z: 93 },\n    { x: -13, y: -59, z: 93 },\n    { x: -12, y: -59, z: 93 },\n  ]);\n  let rightInput = getInput([\n    { x: -10, y: -59, z: 93 },\n    { x: -9, y: -59, z: 93 },\n    { x: -8, y: -59, z: 93 },\n  ]);\n  let total = calculateTotal(leftInput, rightInput);\n  if (total !== null && total !== undefined) {\n    let roundedTotal = roundToDigits(total, 6);\n    outputTotal(roundedTotal, { x: -8, y: -57, z: 93 });\n    world.sendMessage(\"The total is:\");\n    if (roundedTotal === total) {\n      world.sendMessage(`${total}.`);\n    } else {\n      world.sendMessage(`${total} and has been rounded to ${roundedTotal}.`);\n    }\n  } else {\n    world.sendMessage(\"Please input a number.\");\n  }\n}\n","import { BlockPermutation, Vector3, world } from \"@minecraft/server\";\nimport { getBlockValue } from \"./input\";\n\nconst overworld = world.getDimension(\"overworld\");\n//outputs the total to the screen\nexport function outputTotal(total: number, location: Vector3) {\n  let blockName = \"\";\n  let totalString = (\"\" + total).split(\"\").reverse().join(\"\"); //reverses the string so it can be read from right to left\n  for (let i = 0; i < totalString.length; i++) {\n    let { block, permutation } = getBlockValue(location);\n    if (totalString[i] === \".\") {\n      blockName = \"blockbuilders:symbol_decimalpoint\";\n    } else {\n      let digit = parseInt(totalString[i]);\n      blockName = \"blockbuilders:number_\" + digit;\n    }\n    block?.setPermutation(BlockPermutation.resolve(blockName));\n    location.x -= 1;\n  }\n}\n\nexport function setBlock(location: Vector3, blockName: string) {\n  let { block } = getBlockValue(location);\n  block?.setPermutation(BlockPermutation.resolve(blockName));\n}\n\nexport async function clearAnswer(start: Vector3, end: Vector3) {\n  overworld.runCommandAsync(`fill ${start.x} ${start.y} ${start.z} ${end.x} ${end.y} ${end.z} air replace`);\n}\n\nexport function cycleNumberBlock(clickEvent: any) {\n  for (let i = 0; i < 9; i++) {\n    //check for element_0 toplement_8\n    if (clickEvent.brokenBlockPermutation?.matches(\"blockbuilders:number_\" + i)) {\n      let nextNumber = i + 1;\n      let blockname = \"blockbuilders:number_\" + nextNumber;\n      clickEvent.block.setPermutation(BlockPermutation.resolve(blockname));\n    }\n    if (clickEvent.brokenBlockPermutation?.matches(\"blockbuilders:number_9\")) {\n      clickEvent.block.setPermutation(BlockPermutation.resolve(\"blockbuilders:number_0\"));\n    }\n  }\n}\n","export function roundToDigits(num: number, digits: number) {\n  let numStr = num.toString();\n  if (numStr.length > digits) {\n    if (numStr.includes(\".\")) {\n      let [whole, decimal] = numStr.split(\".\");\n      if (whole.length >= digits) {\n        return parseFloat(whole.slice(0, digits));\n      } else {\n        let decimalDigits = digits - whole.length;\n        return parseFloat(num.toFixed(decimalDigits));\n      }\n    } else {\n      return parseFloat(numStr.slice(0, digits));\n    }\n  } else {\n    return num;\n  }\n}\n","import { world } from \"@minecraft/server\";\nimport { getInput } from \"./input\";\nimport { outputTotal, clearAnswer } from \"./output\";\nimport { roundToDigits } from \"./numberHandler\";\n\n//calculates the fraction of a number\nexport async function fraction1() {\n  let outputRight = { x: -22, y: -59, z: 93 };\n  let outputLeft = { x: -26, y: -59, z: 93 };\n  await clearAnswer(outputRight, outputLeft);\n  let numerator = getInput([{ x: -28, y: -57, z: 93 }]);\n  let denominator = getInput([{ x: -28, y: -59, z: 93 }]);\n  let input = getInput([\n    { x: -26, y: -57, z: 93 },\n    { x: -25, y: -57, z: 93 },\n    { x: -24, y: -57, z: 93 },\n  ]);\n  world.sendMessage(\"The fraction is:\");\n  world.sendMessage(numerator + \"/\" + denominator + \" of \" + input);\n  let fraction = calculateFraction(numerator, denominator);\n  let result = fraction * input;\n  world.sendMessage(\"The Output is:\");\n  let roundedFraction = roundToDigits(result, 4);\n  if (result === roundedFraction) {\n    world.sendMessage(\"\" + roundedFraction);\n  } else {\n    world.sendMessage(\"\" + result + \" which has been rounded to \" + roundedFraction);\n  }\n  outputTotal(roundedFraction, outputRight);\n}\n\nfunction calculateFraction(numerator: number, denominator: number): number {\n  if (denominator === 0) {\n    world.sendMessage(\"The denominator cannot be 0. Please input a different number.\");\n  }\n  return numerator / denominator;\n}\n","import { world, BlockPermutation, Vector3 } from \"@minecraft/server\";\nimport { getBlockValue } from \"./input\";\nimport { outputTotal, clearAnswer } from \"./output\";\nimport { roundToDigits } from \"./numberHandler\";\n\nexport async function ratio1() {\n  let output1 = { x: -42, y: -59, z: 93 };\n  let output2 = { x: -40, y: -59, z: 93 };\n  world.sendMessage(\"Calculating the ratio of pink to yellow blocks.\");\n  let ratioInput = [\n    { x: -37, y: -58, z: 93 },\n    { x: -39, y: -60, z: 93 },\n    { x: -38, y: -60, z: 93 },\n    { x: -37, y: -60, z: 93 },\n    { x: -36, y: -60, z: 93 },\n    { x: -35, y: -60, z: 93 },\n    { x: -38, y: -59, z: 93 },\n    { x: -37, y: -59, z: 93 },\n    { x: -36, y: -59, z: 93 },\n  ];\n  let { pink, yellow } = calculateRatio(ratioInput); // Assign values to pink and yellow variables\n  world.sendMessage(\"The ratio is:\");\n  world.sendMessage(pink + \":\" + yellow);\n  outputTotal(pink, output1);\n  outputTotal(yellow, output2);\n}\n\nfunction calculateRatio(ratioInput: Vector3[]) {\n  let yellow = 0;\n  let pink = 0;\n  for (let i = 0; i < ratioInput.length; i++) {\n    let { block, permutation } = getBlockValue(ratioInput[i]);\n    if (permutation?.matches(\"yellow_concrete\")) {\n      yellow++;\n    } else if (permutation?.matches(\"pink_concrete\")) {\n      pink++;\n    }\n  }\n\n  return { pink, yellow };\n}\n","import { world } from \"@minecraft/server\";\nimport { getCube } from \"./input\";\nimport { setBlock } from \"./output\";\nimport { getInput } from \"./input\";\n\nlet overworld = world.getDimension(\"overworld\");\n\nlet glass = [\n  \"magenta\",\n  \"orange\",\n  \"light_blue\",\n  \"yellow\",\n  \"lime\",\n  \"pink\",\n  \"gray\",\n  \"light_gray\",\n  \"cyan\",\n  \"purple\",\n  \"blue\",\n  \"brown\",\n  \"green\",\n  \"red\",\n  \"black\",\n  \"white\",\n];\n\nexport async function scale() {\n  const blocks = await getCube({ x: 13, y: -60, z: 142 }, { x: 13, y: -51, z: 148 });\n  let shape = [];\n  let scaleFactor = getInput([{ x: 12, y: -58, z: 149 }]);\n\n  for (const block of blocks) {\n    for (const colour of glass) {\n      if (block.permutation?.matches(colour + \"_stained_glass\")) {\n        let location = { x: block.block?.x, y: block.block?.y, z: block.block?.z, colour: colour };\n        shape.push(location);\n      }\n    }\n    let scaledShape = await scaleShape(shape, scaleFactor, \"yz\");\n    for (const block of scaledShape) {\n      let offset_z = block.z + 15; //shifts the shape to the right\n      let offset_x = block.x + 10;\n      let offset_y = block.y + 5;\n      setBlock({ x: offset_x, y: offset_y, z: offset_z }, block.colour + \"_stained_glass\");\n    }\n  }\n}\n\nexport async function resetArea() {\n  await overworld.runCommandAsync(\"fill 20 -60 153 32 -40 221 air replace\");\n  await overworld.runCommandAsync(\"fill 20 -40 153 32 -20 221 air replace\");\n  await overworld.runCommandAsync(\"fill 20 -20 153 32 0 221 air replace\");\n  await overworld.runCommandAsync(\"fill 20 0 153 32 30 221 air replace\");\n  await overworld.runCommandAsync(\"clone -49 -60 151 -47 -23 175 21 -60 153 replace\");\n}\n\nexport async function scaleShape(shape: any, scaleFactor: any, axes: string) {\n  const scaledShape = [];\n  // Find the minimum coordinates to use as the base point of the shape\n  const basePoint = shape.reduce(\n    (min: any, block: any) => ({\n      x: Math.min(min.x, block.x),\n      y: Math.min(min.y, block.y),\n      z: Math.min(min.z, block.z),\n    }),\n    shape[0]\n  );\n\n  for (const block of shape) {\n    // Calculate the relative position of the block within the shape\n    const relativePos = {\n      x: block.x - basePoint.x,\n      y: block.y - basePoint.y,\n      z: block.z - basePoint.z,\n    };\n\n    // Scale the relative position\n    for (let i = axes.includes(\"x\") ? 0 : scaleFactor - 1; i < scaleFactor; i++) {\n      for (let j = axes.includes(\"y\") ? 0 : scaleFactor - 1; j < scaleFactor; j++) {\n        for (let k = axes.includes(\"z\") ? 0 : scaleFactor - 1; k < scaleFactor; k++) {\n          // Add the scaled relative position to the base point\n          const scaledBlock = {\n            x: basePoint.x + (axes.includes(\"x\") ? relativePos.x * scaleFactor + i : relativePos.x),\n            y: basePoint.y + (axes.includes(\"y\") ? relativePos.y * scaleFactor + j : relativePos.y),\n            z: basePoint.z + (axes.includes(\"z\") ? relativePos.z * scaleFactor + k : relativePos.z),\n            colour: block.colour,\n          };\n          scaledShape.push(scaledBlock);\n        }\n      }\n    }\n  }\n  return scaledShape;\n}\n","import {\n  BlockPermutation,\n  world,\n  system,\n  Vector3,\n  Player,\n  EntityInventoryComponent,\n  EquipmentSlot,\n  EntityItemComponent,\n} from \"@minecraft/server\";\nimport { roundToDigits } from \"./numberHandler\";\nimport { perfectRun, validRanges, finalBlock } from \"./perfectRun\";\n\nlet overworld = world.getDimension(\"overworld\");\nlet rodsPlaced: any[] = [];\n\nexport async function directionCheck(x: number, z: number, direction: string) {\n  let correctDirection = false;\n\n  for (const range of validRanges) {\n    //world.sendMessage(`x: ${x} z: ${z}`);\n    if (\n      (range.x !== undefined && x === range.x && isInRange(z, range.zMin!, range.zMax!)) ||\n      (range.z !== undefined && z === range.z && isInRange(x, range.xMin!, range.xMax!))\n    ) {\n      correctDirection = true;\n      break;\n    }\n  }\n\n  return correctDirection;\n}\nfunction isInRange(value: number, min: any, max: any): boolean {\n  return value >= min && value <= max;\n}\n\nexport async function cuisenaire(\n  block: any,\n  blockName: string,\n  rodLength: number,\n  successMessage: string,\n  direction: string\n) {\n  if (block.permutation?.matches(blockName)) {\n    let runPlaceRods = true;\n    overworld.runCommand(\"title @p actionbar \" + successMessage);\n    block.setPermutation(BlockPermutation.resolve(\"tallgrass\"));\n    for (let i = 0; i < rodLength; i++) {\n      let colour = block[direction](i)?.permutation?.getState(\"color\");\n      if (colour || block[direction](i)?.permutation?.matches(\"sandstone\")) {\n        overworld.runCommand(\"title @p actionbar That rod is too long!\");\n        runPlaceRods = false;\n        break;\n      }\n    }\n    if (runPlaceRods) {\n      let rodToPlace = { location: block.location, direction: direction, rodLength: rodLength, blockName: blockName };\n      rodsPlaced.push(rodToPlace);\n      placeRods(block, blockName, rodLength, direction);\n      \n      const matchingRodIndex = perfectRun.findIndex((rod) => JSON.stringify(rod) === JSON.stringify(rodToPlace));\n      if (matchingRodIndex >= 0) {\n        //means you match the perfect run.\n        await changeNPC(matchingRodIndex, true);\n      }\n    } else {\n      block?.setPermutation(BlockPermutation.resolve(\"tallgrass\"));\n    }\n  }\n}\n\nasync function changeNPC(matchingRodIndex: number, win: boolean) {\n  //changes the NPC to the success state based on the matchingRodIndex in cuisenaire function.\n  if (win) {\n    overworld.runCommandAsync(`dialogue change @e[tag=rodNpc${matchingRodIndex}] rodNpc${matchingRodIndex}Win`);\n  } else {//changes the NPC\n    overworld.runCommandAsync(`dialogue change @e[tag=rodNpc${matchingRodIndex}] rodNpc${matchingRodIndex}Fail`);\n}\n}\n\nexport async function resetNPC(npcAmount: number) {\n  rodsPlaced = []; //resets the rods placed array.\n  for (let i = 0; i < npcAmount; i++) {\n    overworld.runCommandAsync(`dialogue change @e[tag=rodNpc${i}] rodNpc${i}Default`);\n  }\n}\n\nfunction placeRods(block: any, blockName: string, rodLength: number, direction: string) {\n  const validDirections = [\"east\", \"west\", \"north\", \"south\"];\n  if (validDirections.includes(direction)) {\n    for (let i = 0; i < rodLength; i++) {\n      block[direction](i).setPermutation(BlockPermutation.resolve(blockName))\n      const newRodIndex = finalBlock.findIndex((finalBlockElement) => \n        JSON.stringify(finalBlockElement.location) === JSON.stringify(block[direction](i).location)\n      );\n      if (newRodIndex >= 0) {\n        changeNPC(newRodIndex, false);\n      }\n    }\n  } else {\n    throw new Error(`Invalid direction: ${direction}`);\n  }\n}\n\nasync function setCameraView(x: number, player: any) {\n  if (x >= 19 && x <= 42) {//room1\n    player.runCommandAsync(`camera ${player.name} set minecraft:free pos 30 120 92 facing 30 90 92`);\n  } else if (x >= 44 && x <= 67) {//room2\n    player.runCommandAsync(`camera ${player.name} set minecraft:free pos 11 120 44 facing 11 94 44`);\n  } else if (x >= 69 && x <= 92) {//room3\n    player.runCommandAsync(`camera ${player.name} set minecraft:free pos -14 120 44 facing -14 94 44`);\n  } else if (x >= 94 && x <= 117) {//room4\n    player.runCommandAsync(`camera ${player.name} set minecraft:free pos -39 120 44 facing -39 94 44`);\n  }\n}\n\nexport async function getBlockBehind(event: any, oppositeDirection: string) {\n  let hasColour = event.block[oppositeDirection](1)?.permutation?.getState(\"color\");\n  return hasColour;\n}\n\nexport async function replay(index: number) {\n  let tpStart = `tp @p 31 96 107 facing 31 96 100`;\n  let clearBlock = `fill 30 95 104 30 95 93 tallgrass replace`;\n  let replenishGrass = `fill 30 94 104 30 94 93 grass_block replace`;\n  overworld.runCommandAsync(clearBlock);\n  overworld.runCommandAsync(replenishGrass);\n  let rodsPlacedToReplay = rodsPlaced.filter((rod) => rod.location && rod.location.x === 30);\n  let perfectRunToReplay = perfectRun.filter((rod) => rod.location && rod.location.x === 30);\n  let combinedRods = rodsPlacedToReplay.concat(perfectRunToReplay);\n  for (let i = 0; i < combinedRods.length; i++) {\n    ((index) => {\n      system.runTimeout(async () => {\n        let x = combinedRods[index].location.x;\n        world.getAllPlayers().forEach(async (player) => {\n          await setCameraView(x, player);\n\n          let block = overworld.getBlock(combinedRods[index].location);\n          placeRods(block, combinedRods[index].blockName, combinedRods[index].rodLength, combinedRods[index].direction);\n          if (i === combinedRods.length - 1) {\n            //resets the camera 2 seconds after last rod placed.\n            endReplay(player, tpStart, clearBlock, replenishGrass);\n          }\n        });\n      }, 40 * index);\n      return;\n    })(i);\n  }\n}\n\nfunction endReplay(player: any, tpStart: string, clearCommand: string, replenishGrass: string) {\n  system.runTimeout(() => {\n    player.runCommandAsync(tpStart);\n    player.runCommandAsync(clearCommand);\n    player.runCommandAsync(replenishGrass);\n    player.runCommandAsync(`camera ${player.name} clear`);\n  }, 40);\n}\n\n//Resets the area to the original state, one area at a time.\nasync function squareReset(pos1: Vector3, pos2: Vector3, concreteColours: string[]) {\n  for (let i = 0; i < concreteColours.length; i++) {\n    let command = `fill ${pos1.x} ${pos1.y} ${pos1.z} ${pos2.x} ${pos2.y} ${pos2.z} tallgrass replace ${concreteColours[i]}_concrete`;\n    overworld.runCommand(command);\n  }\n  overworld.runCommandAsync(\n    `fill ${pos1.x} ${pos1.y - 1} ${pos1.z} ${pos2.x} ${pos2.y - 1} ${pos2.z} grass replace dirt`\n  );\n  overworld.runCommandAsync(`fill ${pos1.x} ${pos1.y} ${pos1.z} ${pos2.x} ${pos2.y} ${pos2.z} tallgrass replace air`);\n}\n\n//preps the grid coordinates for the squareReset function.\nexport async function resetGrid(location: Vector3) {\n  let concreteColours = [\"red\", \"green\", \"purple\", \"brown\", \"blue\", \"lime\", \"yellow\"]; // What rods will be replaced.\n  for (let i = 0; i < 4; i++) {\n    let offset_x = location.x + i * 25; // 25 is the distance between each starting point of the grid.\n    let pos1 = { x: offset_x, y: location.y, z: location.z };\n    let pos2 = { x: offset_x + 24, y: location.y, z: location.z + 24 };\n    await squareReset(pos1, pos2, concreteColours);\n  }\n}\n\nexport async function giveRods(player: any, rodsRemoved: any[]) {\n  let rods = [\n    { block: \"red_concrete\", amount: 10 },\n    { block: \"lime_concrete\", amount: 10 },\n    { block: \"purple_concrete\", amount: 10 },\n    { block: \"green_concrete\", amount: 10 },\n    { block: \"brown_concrete\", amount: 10 },\n    { block: \"yellow_concrete\", amount: 10 },\n    { block: \"blue_concrete\", amount: 10 },\n  ];\n  player.runCommandAsync(`clear ${player.name}`);\n  for (let i = 0; i < rods.length; i++) {\n    player.runCommandAsync(\n      `give @p ${rods[i].block} ${rods[i].amount} 0 {\"minecraft:can_place_on\":{\"blocks\":[\"tallgrass\"]}}`\n    );\n  }\n}\n","//defines the perfect run for the Cuisneaire Rods game.\nexport const perfectRun = [\n  { location: { z: 104 ,y: 95, x: 30}, direction: \"north\", rodLength: 12, blockName: \"yellow_concrete\"}, //1/2\n  { location: { z: 92, y: 95, x: 31 }, direction: \"east\", rodLength: 6, blockName: \"green_concrete\" }, //1/4\n\n  { location: { z: 91, y: 95, x: 44 }, direction: \"east\", rodLength: 8, blockName: \"brown_concrete\" }, //1/3\n  { location: { z: 94, y: 95, x: 53 }, direction: \"south\", rodLength: 4, blockName: \"purple_concrete\" }, //1/6\n  { location: { z: 99, y: 95, x: 55 }, direction: \"east\", rodLength: 8, blockName: \"brown_concrete\" }, //2/6\n\n  { location: { z: 99, y: 95, x: 69 }, direction: \"east\", rodLength: 24, blockName: \"blue_concrete\" }, //1/1\n  { location: { z: 99, y: 95, x: 93 }, direction: \"east\", rodLength: 24, blockName: \"blue_concrete\" }, //1/1\n  // If this code remains you need to fix this issue.\n  // The problem is having two values on the same rod puts out the index.\n  // You'll need a handler for all the values that do that.\n  { location: { z: 95, y: 95, x: 115 }, direction: \"west\", rodLength: 3, blockName: \"lime_concrete\" },\n  //{ location: { z: 94, y: 95, x: 109 }, direction: \"west\", rodLength: 6, blockName: \"green_concrete\" },\n  { location: { z: 94, y: 95, x: 103 }, direction: \"west\", rodLength: 3, blockName: \"lime_concrete\" },\n  { location: { z: 92, y: 95, x: 99 }, direction: \"north\", rodLength: 2, blockName: \"red_concrete\" },\n  { location: { z: 89, y: 95, x: 97 }, direction: \"west\", rodLength: 4, blockName: \"purple_concrete\" },\n  { location: { z: 89, y: 95, x: 92 }, direction: \"west\", rodLength: 2, blockName: \"red_concrete\" },\n  { location: { z: 89, y: 95, x: 87 }, direction: \"west\", rodLength: 8, blockName: \"brown_concrete\" },\n];\n\nexport const validRanges = [\n  { x: 30, zMin: 93, zMax: 104 },\n  { xMin: 31, xMax: 36, z: 92 },\n  { xMin: 44, xMax: 51, z: 91 },\n  { x: 53, zMin: 94, zMax: 97 },\n  { xMin: 55, xMax: 62, z: 99 },\n  { xMin: 69, xMax: 116, z: 99 },\n  { xMin: 113, xMax: 115, z: 95 },\n  { xMin: 101, xMax: 109, z: 94 },\n  { x: 99, zMin: 91, zMax: 92 },\n  { xMin: 94, xMax: 97, z: 89 },\n  { xMin: 91, xMax: 92, z: 89 },\n  { xMin: 80, xMax: 87, z: 89 },\n];\n\nexport const finalBlock = [\n  { location: { z: 93, y: 95, x: 30 }},\n  { location: { z: 92, y: 95, x: 36 },},\n  { location: { z: 91, y: 95, x: 51 },},\n  { location: { z: 97, y: 95, x: 53 },},\n  { location: { z: 99, y: 95, x: 62},},\n  { location: { z: 99, y: 95, x: 92 },},\n  { location: { z: 99, y: 95, x: 116 },},\n  { location: { z: 95, y: 95, x: 113 },},\n  { location: { z: 94, y: 95, x: 101 },},\n  { location: { z: 91, y: 95, x: 99 },},\n  { location: { z: 89, y: 95, x: 94 },},\n  { location: { z: 89, y: 95, x: 91 },},\n  { location: { z: 89, y: 95, x: 80 },},\n]","import { Vector3 } from \"@minecraft/server\";\n\nexport async function facing(blockLocation: Vector3) {\n  const xDiff = Math.abs(blockLocation.x);\n  const zDiff = Math.abs(blockLocation.z);\n  \n  let direction;\n  \n  if (xDiff > zDiff) {\n    direction = blockLocation.x > 0 ? \"east\" : \"west\";\n  } else {\n    direction = blockLocation.z > 0 ? \"south\" : \"north\";\n  }\n\n  const oppositeDirections: { [key: string]: string } = {\n    \"east\": \"west\",\n    \"west\": \"east\",\n    \"south\": \"north\",\n    \"north\": \"south\"\n  };\n  let oppositeDirection = oppositeDirections[direction];\n\n  return {direction, oppositeDirection};\n}","import { BlockPermutation, BlockInventoryComponent, system, world } from \"@minecraft/server\";\nimport { getBlockValue } from \"./input\";\n\nasync function getSlots(event: any) {\n  let hopper: BlockInventoryComponent | undefined = event.block.getComponent(\"inventory\");\n  let slots = [];\n  for (let i = 0; i <= 4; i++) {\n    let item = hopper?.container?.getItem(i);\n    slots.push({\n      slotNumber: i,\n      amount: item?.amount,\n      typeId: item?.typeId,\n    });\n  }\n  return slots;\n}\nasync function givePotion() {\n  world.getDimension(\"overworld\").runCommandAsync(`clear @p minecraft:potion`);\n  world.getDimension(\"overworld\").runCommandAsync(`give @p minecraft:potion 1`);\n}\nasync function calculateRatio(ingredients: any) {\n  let wrongIngredientsSight = ingredients.potato + ingredients.beetroot + ingredients.melon;\n  let wrongIngredientsDive = ingredients.apple + ingredients.carrot;\n  let appleRatio = ingredients.apple + ingredients.potato + ingredients.beetroot + ingredients.melon;\n  let carrotRatio = ingredients.carrot + ingredients.potato + ingredients.beetroot + ingredients.melon;\n  let potatoRatio = ingredients.potato + ingredients.apple + ingredients.carrot;\n  let beetrootRatio = ingredients.beetroot + ingredients.apple + ingredients.carrot;\n  let melonRatio = ingredients.melon + ingredients.apple + ingredients.carrot;\n  let total: number =\n    ingredients.apple + ingredients.carrot + ingredients.potato + ingredients.beetroot + ingredients.melon;\n  let nightVision: number = carrotRatio / appleRatio;\n  let beetrootMelonRatio: number = beetrootRatio / melonRatio;\n  let melonPotatoRatio: number = melonRatio / potatoRatio;\n\n  if (beetrootMelonRatio === 1.5 && melonPotatoRatio === 2) {\n    let potion = \"water_breathing\";\n    let seconds = Math.ceil(beetrootRatio + melonRatio + potatoRatio);\n    return { potion, seconds };\n  } else if (nightVision === 2) {\n    let potion = \"night_vision\";\n    let seconds = Math.ceil(ingredients.apple + ingredients.carrot);\n    return { potion, seconds };\n  } else if (wrongIngredientsSight === 0 && potatoRatio + carrotRatio > 0) {\n    let seconds = Math.ceil(potatoRatio + carrotRatio);\n    let potion = \"blindness\";\n    return { potion, seconds };\n  } else if (wrongIngredientsDive === 0 && beetrootRatio + melonRatio + potatoRatio > 0) {\n    let seconds = Math.ceil(beetrootRatio + melonRatio + potatoRatio);\n    let potion = \"levitation\";\n    return { potion, seconds };\n  } else if (total === 0) {\n    let seconds = 0;\n    let potion = \"empty\";\n    return { potion, seconds };\n  } else {\n    let seconds = Math.ceil((appleRatio + carrotRatio) / 10);\n    let potion = \"poison\";\n    return { potion, seconds };\n  }\n}\n\nasync function barChart(slots: any) {\n  let ingredients = {\n    apple: 0,\n    carrot: 0,\n    potato: 0,\n    beetroot: 0,\n    melon: 0,\n  };\n  for (let slot of slots) {\n    switch (slot.typeId) {\n      case \"minecraft:apple\": {\n        await setGlass(slot, \"red_stained_glass\");\n        await setItemFrame(0, slot.slotNumber);\n        ingredients.apple = (ingredients.apple || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:carrot\": {\n        await setGlass(slot, \"orange_stained_glass\");\n        await setItemFrame(1, slot.slotNumber);\n        ingredients.carrot = (ingredients.carrot || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:potato\": {\n        await setGlass(slot, \"yellow_stained_glass\");\n        await setItemFrame(2, slot.slotNumber);\n        ingredients.potato = (ingredients.potato || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:beetroot\": {\n        await setGlass(slot, \"purple_stained_glass\");\n        await setItemFrame(3, slot.slotNumber);\n        ingredients.beetroot = (ingredients.beetroot || 0) + slot.amount;\n        break;\n      }\n      case \"minecraft:melon_slice\": {\n        await setGlass(slot, \"green_stained_glass\");\n        await setItemFrame(4, slot.slotNumber);\n        ingredients.melon = (ingredients.melon || 0) + slot.amount;\n        break;\n      }\n      default: {\n        //empty\n        await setItemFrame(5, slot.slotNumber);\n        break;\n      }\n    }\n  }\n  return ingredients;\n}\nasync function setGlass(slot: any, blockName: string) {\n  let { block } = getBlockValue({ x: -52, y: 61, z: 126 });\n  block?.north(slot.slotNumber)?.setPermutation(BlockPermutation.resolve(blockName));\n  if (slot.amount > 10) {\n    slot.amount = 10;\n  }\n  for (let i = 0; i < slot.amount; i++) {\n    block?.above(i)?.north(slot.slotNumber)?.setPermutation(BlockPermutation.resolve(blockName));\n  }\n}\nasync function setItemFrame(offset_z: number, slotNumber: number) {\n  let cloneFrom = 126 - offset_z;\n  let cloneTo = 126 - slotNumber;\n  world\n    .getDimension(\"overworld\")\n    .runCommandAsync(`clone -40 60 ${cloneFrom} -40 60 ${cloneFrom} -50 60 ${cloneTo} replace`);\n}\n\nexport async function potionMaker(event: any) {\n  await resetArea();\n  let slots = await getSlots(event);\n  let ingredients = await barChart(slots);\n  let { potion, seconds } = await calculateRatio(ingredients);\n  if (potion !== \"empty\") {\n    await givePotion();\n  }\n  return { potion, seconds };\n}\n\nasync function resetArea() {\n  await world.getDimension(\"overworld\").runCommandAsync(\"fill -52 60 126 -52 69 122 black_stained_glass replace\");\n}\n\n\nexport function displayTimer(potionStart: number, seconds: number, player: any, potionDescription: string) {\n  let timeLeft = (potionStart + seconds * 20 - system.currentTick)/20;\n  if (timeLeft % 1 === 0 ){\n            player.onScreenDisplay.setActionBar(`Time left:\\n ${potionDescription} ${timeLeft} seconds`);\n          }\n}; \n","\nimport { system, world } from \"@minecraft/server\";\nimport { replay } from \"./rod\"; \nimport { perfectRun } from \"./perfectRun\";\n\n//handles the scriptEventReceive from NPCs\nsystem.afterEvents.scriptEventReceive.subscribe((event) => {\n    switch (event.id) {\n      case \"rod:npcReplay\": {\n        replay(parseInt(event.message));\n        break;\n      }\n      case \"rod:npcComplete\": {\n        world.sendMessage(`Complete Version ${event.message}`);\n        break;\n      }\n    }\n  });\n  \n"],"mappings":"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","names":["world","system","BlockPermutation","world","BlockPermutation","world","overworld","world","BlockPermutation","world","world","world","world","world","world","overworld","world","block","BlockPermutation","world","overworld","world","BlockPermutation","index","BlockPermutation","system","world","world","calculateRatio","potion","seconds","BlockPermutation","resetArea","potionStart","system","system","world","system","world","world","BlockPermutation","potion","seconds","system"],"file":"../scripts/main.js"}